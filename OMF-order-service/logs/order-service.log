"2020-09-25 11:25:02 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 11:25:02 INFO  c.m.o.OrderServiceApplication - The following profiles are active: prod
""2020-09-25 11:25:03 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 11:25:03 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69ms. Found 3 JPA repository interfaces.
""2020-09-25 11:25:03 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 11:25:03 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 11:25:04 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 11:25:04 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 11:25:04 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 11:25:04 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 11:25:04 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1810 ms
""2020-09-25 11:25:05 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 11:25:11 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 11:25:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 11:25:16 INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
""2020-09-25 11:25:16 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 11:25:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 11:25:17 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 11:25:17 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 11:25:17 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 11:25:17 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 11:25:17 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 11:25:17 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 11:25:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 11:25:17 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 11:25:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 11:25:18 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 11:25:18 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 11:25:18 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 11:25:18 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 11:25:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 11:25:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 11:25:19 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 11:25:19 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 11:25:19 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 11:25:19 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601013319775 with initial instances count: 0
""2020-09-25 11:25:19 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601013319778, current=UP, previous=STARTING]
""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 11:25:19 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 11:25:19 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 11:25:19 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 11:25:19 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 11:25:19 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601013319902
""2020-09-25 11:25:19 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 11:25:19 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 11:25:19 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 11:25:19 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 11:25:19 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 11:25:20 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 11:25:20 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 11:25:20 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 11:25:20 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 21.497 seconds (JVM running for 22.753)
""2020-09-25 11:25:22 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:24 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:26 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:28 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:30 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:33 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:36 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:39 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:42 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:45 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:49 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:49 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 11:25:49 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 11:25:49 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 11:25:49 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 11:25:49 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 11:25:49 INFO  c.n.discovery.DiscoveryClient - Application version is -1: false
""2020-09-25 11:25:49 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 11:25:49 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 11:25:52 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:55 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:25:58 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:01 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:04 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:07 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:10 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:13 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:16 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:19 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:22 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:25 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:28 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:31 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:34 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:37 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:40 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:43 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:46 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:49 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:52 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:55 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:26:58 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:01 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:04 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:07 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:10 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:13 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:16 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:20 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:23 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:26 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:29 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:27:33 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:29:15 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:29:18 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:29:21 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Broker may not be available.
""2020-09-25 11:29:21 WARN  c.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m10s320ms700µs900ns).
""2020-09-25 11:29:23 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 11:29:23 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 11:29:23 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601013563044, current=DOWN, previous=UP]
""2020-09-25 11:29:23 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 11:29:23 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 11:29:23 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 11:29:23 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 11:29:23 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 11:29:23 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 11:29:23 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 11:29:23 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 11:29:23 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 11:29:23 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 11:29:23 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 11:29:23 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 11:29:23 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 11:29:23 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 13:43:35 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 13:43:35 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 13:43:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 13:43:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75ms. Found 3 JPA repository interfaces.
""2020-09-25 13:43:36 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 13:43:36 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 13:43:37 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 13:43:37 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 13:43:37 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 13:43:37 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 13:43:37 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1945 ms
""2020-09-25 13:43:37 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 13:43:37 WARN  c.z.hikari.util.DriverDataSource - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
""2020-09-25 13:43:38 ERROR c.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
"java.sql.SQLNonTransientConnectionException: CLIENT_PLUGIN_AUTH is required
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:79) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) [HikariCP-3.4.5.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1109) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at com.mindtree.order.OrderServiceApplication.main(OrderServiceApplication.java:16) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
Caused by: com.mysql.cj.exceptions.UnableToConnectException: CLIENT_PLUGIN_AUTH is required
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:1.8.0_241]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:114) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1342) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:157) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	... 54 common frames omitted
"2020-09-25 13:43:39 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 13:43:39 WARN  c.z.hikari.util.DriverDataSource - Registered driver with driverClassName=com.mysql.jdbc.Driver was not found, trying direct instantiation.
""2020-09-25 13:43:40 ERROR c.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
"java.sql.SQLNonTransientConnectionException: CLIENT_PLUGIN_AUTH is required
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:79) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) [HikariCP-3.4.5.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:333) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259) [hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) [spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1109) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at com.mindtree.order.OrderServiceApplication.main(OrderServiceApplication.java:16) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) ~[spring-boot-devtools-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
Caused by: com.mysql.cj.exceptions.UnableToConnectException: CLIENT_PLUGIN_AUTH is required
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:1.8.0_241]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:114) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1342) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:157) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	... 53 common frames omitted
"2020-09-25 13:43:40 ERROR o.h.e.j.spi.SqlExceptionHelper - CLIENT_PLUGIN_AUTH is required
""2020-09-25 13:43:40 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
""2020-09-25 13:43:40 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 13:43:40 INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
""2020-09-25 13:43:40 ERROR o.s.boot.SpringApplication - Application run failed
"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1109) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at com.mindtree.order.OrderServiceApplication.main(OrderServiceApplication.java:16) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 21 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:333) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 25 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: CLIENT_PLUGIN_AUTH is required
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:79) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-3.4.5.jar:na]
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	... 40 common frames omitted
Caused by: com.mysql.cj.exceptions.UnableToConnectException: CLIENT_PLUGIN_AUTH is required
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Constructor.newInstance(Unknown Source) ~[na:1.8.0_241]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:85) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.protocol.a.NativeAuthenticationProvider.connect(NativeAuthenticationProvider.java:114) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1342) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:157) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.21.jar:8.0.21]
	... 53 common frames omitted
"2020-09-25 13:45:18 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 13:45:18 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 13:45:19 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 13:45:19 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106ms. Found 3 JPA repository interfaces.
""2020-09-25 13:45:20 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 13:45:20 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 13:45:21 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 13:45:21 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 13:45:21 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 13:45:21 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 13:45:21 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2774 ms
""2020-09-25 13:45:22 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 13:45:22 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 13:45:23 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 13:45:23 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 13:45:23 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 13:45:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 13:45:24 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 13:45:24 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 13:45:24 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 13:45:24 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 13:45:24 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 13:45:24 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 13:45:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 13:45:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 13:45:24 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 13:45:25 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 13:45:26 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 13:45:26 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 13:45:26 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 13:45:27 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 13:45:27 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 13:45:27 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 13:45:27 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 13:45:27 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 13:45:28 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601021728307 with initial instances count: 0
""2020-09-25 13:45:28 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601021728310, current=UP, previous=STARTING]
""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 13:45:28 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 13:45:28 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 13:45:28 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 13:45:28 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 13:45:28 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601021728421
""2020-09-25 13:45:28 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 13:45:28 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 13:45:28 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 13:45:28 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 13:45:28 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 13:45:28 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 13:45:28 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 13:45:28 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 13:45:28 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 13:45:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 13:45:28 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 13:45:28 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 13:45:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 13:45:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 13:45:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 76
""2020-09-25 13:45:28 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 13:45:28 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=13, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 13:45:28 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 13:45:29 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 15.509 seconds (JVM running for 16.673)
""2020-09-25 13:45:58 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 13:45:58 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 13:45:58 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 13:45:58 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 13:45:58 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 13:45:58 INFO  c.n.discovery.DiscoveryClient - Application version is -1: false
""2020-09-25 13:45:58 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 13:45:58 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 13:47:15 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 13:47:15 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 13:47:15 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 13:47:15 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 13:47:15 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 13:47:15 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@13badd6d
""2020-09-25 13:47:15 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 13:47:16 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 13:49:53 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2020-09-25 13:49:53 INFO  o.s.w.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2020-09-25 13:49:53 DEBUG o.s.w.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2020-09-25 13:49:53 DEBUG o.s.w.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2020-09-25 13:49:53 INFO  o.s.w.servlet.DispatcherServlet - Completed initialization in 13 ms
""2020-09-25 13:49:53 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/9977889988/Nadan/nithin%40gmail.com", parameters={}
""2020-09-25 13:49:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 13:49:53 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 13:49:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 13:49:53 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 13:49:53 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 13:49:53 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 13:49:55 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/9977889988/Nadan/nithin%40gmail.com", parameters={}
""2020-09-25 13:49:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 13:49:55 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 13:49:55 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 13:49:55 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 13:49:55 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 13:49:55 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 13:50:28 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 14:26:17 INFO  o.a.k.c.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=group_id] Error sending fetch request (sessionId=1163327323, epoch=862) to node 0: org.apache.kafka.common.errors.DisconnectException.
""2020-09-25 14:26:17 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null) is unavailable or invalid, will attempt rediscovery
""2020-09-25 14:26:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 14:26:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Attempt to heartbeat failed for since member id consumer-1-36335846-53d2-4c64-a3e1-c5367fda1bbf is not valid.
""2020-09-25 14:26:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions [addToCart-0]
""2020-09-25 14:26:18 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: [addToCart-0]
""2020-09-25 14:26:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 14:26:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 14:26:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 78
""2020-09-25 14:26:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 14:26:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=14, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 14:26:18 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 14:26:23 WARN  c.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=34m1s421ms99µs).
""2020-09-25 14:28:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 14:33:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 14:38:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 14:43:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 14:48:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 14:53:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 14:58:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:03:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:08:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:13:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:18:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:23:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:28:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:33:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:38:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:43:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:48:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:52:26 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 15:52:26 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 15:52:26 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601029346824, current=DOWN, previous=UP]
""2020-09-25 15:52:26 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 15:52:26 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 15:52:26 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-764d51a6-e2cd-4b9f-b042-b26ccdfbc89c sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 15:52:26 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 15:52:26 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 15:52:26 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 15:52:26 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 15:52:26 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 15:52:26 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 15:52:26 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 15:52:26 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 15:52:26 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 15:52:29 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 15:52:29 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 15:52:29 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 15:52:30 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 15:52:30 INFO  o.a.c.c.C.[.[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
""2020-09-25 15:52:30 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 15:59:37 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 15:59:37 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 15:59:38 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 15:59:38 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71ms. Found 3 JPA repository interfaces.
""2020-09-25 15:59:38 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 15:59:38 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 15:59:39 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 15:59:39 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 15:59:39 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 15:59:39 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 15:59:39 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2141 ms
""2020-09-25 15:59:39 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 15:59:40 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 15:59:40 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 15:59:40 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 15:59:41 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 15:59:41 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 15:59:41 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 15:59:41 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 15:59:41 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 15:59:41 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 15:59:41 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 15:59:41 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 15:59:41 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 15:59:41 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 15:59:41 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 15:59:42 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 15:59:43 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 15:59:43 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 15:59:43 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 15:59:43 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 15:59:43 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 15:59:44 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 15:59:44 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 15:59:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 15:59:44 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601029784633 with initial instances count: 0
""2020-09-25 15:59:44 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601029784637, current=UP, previous=STARTING]
""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 15:59:44 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 15:59:44 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 15:59:44 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 15:59:44 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 15:59:44 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601029784743
""2020-09-25 15:59:44 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 15:59:44 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 15:59:44 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 15:59:44 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 15:59:44 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 15:59:44 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 15:59:44 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 15:59:44 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 15:59:44 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 15:59:44 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 15:59:44 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 15:59:44 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 15:59:44 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 15:59:44 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 15:59:45 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 80
""2020-09-25 15:59:45 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 15:59:45 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=14, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 15:59:45 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 15:59:45 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 11.792 seconds (JVM running for 13.003)
""2020-09-25 16:00:14 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 16:00:14 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 16:00:14 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 16:00:14 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 16:00:14 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 16:00:14 INFO  c.n.discovery.DiscoveryClient - Application version is -1: false
""2020-09-25 16:00:14 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 16:00:14 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 16:04:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:09:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:14:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:19:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:24:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:29:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:34:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:39:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:44:44 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:47:00 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null) is unavailable or invalid, will attempt rediscovery
""2020-09-25 16:47:00 INFO  o.a.k.c.FetchSessionHandler - [Consumer clientId=consumer-1, groupId=group_id] Error sending fetch request (sessionId=842564732, epoch=5644) to node 0: org.apache.kafka.common.errors.DisconnectException.
""2020-09-25 16:47:02 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node 0 (MT-7JZHRT2/192.168.43.39:9092) could not be established. Broker may not be available.
""2020-09-25 16:47:05 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node 0 (MT-7JZHRT2/192.168.43.39:9092) could not be established. Broker may not be available.
""2020-09-25 16:47:07 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node 0 (MT-7JZHRT2/192.168.43.39:9092) could not be established. Broker may not be available.
""2020-09-25 16:47:09 WARN  o.a.kafka.clients.NetworkClient - [Consumer clientId=consumer-1, groupId=group_id] Connection to node 0 (MT-7JZHRT2/192.168.43.39:9092) could not be established. Broker may not be available.
""2020-09-25 16:52:16 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 16:52:16 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 16:52:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 16:52:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 3 JPA repository interfaces.
""2020-09-25 16:52:17 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 16:52:17 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 16:52:17 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 16:52:17 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 16:52:17 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 16:52:17 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 16:52:17 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1688 ms
""2020-09-25 16:52:18 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 16:52:18 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 16:52:19 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 16:52:19 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 16:52:19 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 16:52:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 16:52:19 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 16:52:19 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 16:52:19 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 16:52:19 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 16:52:19 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 16:52:20 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 16:52:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 16:52:20 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 16:52:20 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 16:52:20 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 16:52:21 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 16:52:21 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 16:52:21 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 16:52:21 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 16:52:21 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 16:52:21 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 16:52:21 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 16:52:22 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 16:52:22 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601032942509 with initial instances count: 3
""2020-09-25 16:52:22 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601032942512, current=UP, previous=STARTING]
""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 16:52:22 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 16:52:22 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 16:52:22 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 16:52:22 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 16:52:22 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601032942587
""2020-09-25 16:52:22 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 16:52:22 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 16:52:22 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 16:52:22 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 16:52:22 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 16:52:22 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 16:52:22 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 16:52:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 16:52:22 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 16:52:22 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 16:52:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 16:52:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 16:52:22 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 16:52:22 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 16:52:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 82
""2020-09-25 16:52:22 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 16:52:22 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=14, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 16:52:22 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 16:52:23 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 16:52:23 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 16:52:23 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 16:52:23 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 16:52:23 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 16:52:23 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@36c03675
""2020-09-25 16:52:23 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:52:23 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 10.094 seconds (JVM running for 11.136)
""2020-09-25 16:52:23 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:52:23 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 15, CreateTime = 1601032755562, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 16:52:23 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:52:23 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 16, CreateTime = 1601032813394, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 16:52:23 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:52:23 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 17, CreateTime = 1601032840023, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 16:52:23 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:52:24 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 16:53:35 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:53:35 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 19, CreateTime = 1601033015039, serialized key size = -1, serialized value size = 116, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":1},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 16:54:34 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 16:54:34 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 16:54:34 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601033074727, current=DOWN, previous=UP]
""2020-09-25 16:54:34 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 16:54:34 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 16:54:34 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-b9c46a29-7ad4-4731-ba0e-5c23a3ed176b sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 16:54:34 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 16:54:34 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 16:54:34 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 16:54:34 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 16:54:34 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 16:54:34 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 16:54:34 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 16:54:34 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 16:54:34 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 16:54:37 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 16:54:37 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 16:54:37 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 16:54:38 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 16:54:38 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 16:54:56 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 16:54:56 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 16:54:56 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 16:54:57 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 3 JPA repository interfaces.
""2020-09-25 16:54:57 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 16:54:57 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 16:54:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 16:54:57 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 16:54:57 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 16:54:57 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 16:54:57 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1671 ms
""2020-09-25 16:54:58 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 16:54:58 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 16:54:59 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 16:54:59 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 16:54:59 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 16:54:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 16:54:59 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 16:54:59 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 16:54:59 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 16:54:59 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 16:54:59 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 16:55:00 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 16:55:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 16:55:00 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 16:55:00 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 16:55:00 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 16:55:01 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 16:55:01 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 16:55:01 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 16:55:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 16:55:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 16:55:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 16:55:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 16:55:02 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 16:55:02 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601033102510 with initial instances count: 3
""2020-09-25 16:55:02 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601033102513, current=UP, previous=STARTING]
""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 16:55:02 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 16:55:02 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 16:55:02 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 16:55:02 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 16:55:02 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601033102589
""2020-09-25 16:55:02 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 16:55:02 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 16:55:02 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 16:55:02 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 16:55:02 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 16:55:02 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 16:55:02 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 16:55:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 16:55:02 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 16:55:02 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 16:55:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 16:55:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 16:55:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 16:55:02 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 16:55:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 84
""2020-09-25 16:55:02 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 16:55:02 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=19, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 16:55:02 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 16:55:03 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 16:55:03 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 16:55:03 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 16:55:03 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 16:55:03 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 16:55:03 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6462986
""2020-09-25 16:55:03 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:55:03 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 10.062 seconds (JVM running for 11.15)
""2020-09-25 16:55:04 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 16:55:20 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:55:20 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 20, CreateTime = 1601033120508, serialized key size = -1, serialized value size = 116, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":1},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 16:56:21 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 16:56:21 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 21, CreateTime = 1601033180986, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 16:59:42 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 16:59:42 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 16:59:42 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601033382491, current=DOWN, previous=UP]
""2020-09-25 16:59:42 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 16:59:42 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 16:59:42 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-4bbda9b4-7c09-43c5-9e8d-5fc263596ed3 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 16:59:42 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 16:59:42 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 16:59:42 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 16:59:42 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 16:59:42 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 16:59:42 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 16:59:42 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 16:59:42 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 16:59:42 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 16:59:45 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 16:59:45 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 16:59:45 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 16:59:46 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 16:59:46 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 16:59:58 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 16:59:58 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 17:00:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 17:00:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130ms. Found 3 JPA repository interfaces.
""2020-09-25 17:00:01 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 17:00:01 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 17:00:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 17:00:02 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 17:00:02 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 17:00:02 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 17:00:02 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3624 ms
""2020-09-25 17:00:03 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 17:00:03 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 17:00:04 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:00:04 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 17:00:06 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 17:00:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 17:00:08 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 17:00:08 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:00:08 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:00:08 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:00:08 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:00:08 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:00:08 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 17:00:08 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 17:00:08 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 17:00:09 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 17:00:10 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 17:00:10 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 17:00:10 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 17:00:11 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 17:00:11 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 17:00:11 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 17:00:11 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 17:00:12 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 17:00:12 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 17:00:12 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 17:00:12 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 17:00:12 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 17:00:12 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 17:00:12 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 17:00:12 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 17:00:13 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 17:00:13 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 17:00:13 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 17:00:13 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601033413053 with initial instances count: 3
""2020-09-25 17:00:13 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 17:00:13 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601033413062, current=UP, previous=STARTING]
""2020-09-25 17:00:13 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:00:13 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 17:00:13 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:00:13 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 17:00:13 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 17:00:13 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601033413230
""2020-09-25 17:00:13 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 17:00:13 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 17:00:13 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 17:00:13 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 17:00:13 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 17:00:13 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 17:00:13 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 17:00:13 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:00:13 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 17:00:13 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 17:00:13 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 17:00:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 17:00:13 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 17:00:13 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 17:00:13 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 86
""2020-09-25 17:00:13 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 17:00:13 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=20, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 17:00:13 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 17:00:14 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 20.717 seconds (JVM running for 23.043)
""2020-09-25 17:01:04 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:01:04 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:01:04 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 17:01:04 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 17:01:04 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:01:04 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2c034a6
""2020-09-25 17:01:05 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:01:05 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:01:24 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 20, CreateTime = 1601033120508, serialized key size = -1, serialized value size = 116, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":1},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:01:29 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:01:34 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 21, CreateTime = 1601033180986, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:01:37 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:01:38 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 22, CreateTime = 1601033434161, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:78) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:04:45 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 17:04:45 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601033685483, current=DOWN, previous=UP]
""2020-09-25 17:04:45 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:04:45 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:04:45 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-bb2c1a54-9669-4da2-b3db-942eb6241c7c sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:04:45 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 17:04:45 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 17:04:45 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 17:04:45 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:04:45 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:04:45 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:04:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 17:04:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 17:04:45 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 17:04:48 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 17:04:48 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 17:04:48 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 17:04:51 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 17:04:51 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 17:04:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 17:04:52 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 3 JPA repository interfaces.
""2020-09-25 17:04:52 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 17:04:52 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 17:04:52 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 17:04:52 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 17:04:52 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 17:04:52 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 17:04:52 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 855 ms
""2020-09-25 17:04:52 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
""2020-09-25 17:04:52 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
""2020-09-25 17:04:52 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:04:52 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 17:04:52 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 17:04:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 17:04:53 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 17:04:53 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:04:53 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:04:53 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:04:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 17:04:53 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 17:04:53 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 17:04:53 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 17:04:54 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 17:04:54 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 17:04:54 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 17:04:54 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 17:04:54 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 17:04:54 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 17:04:54 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 17:04:54 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601033694222 with initial instances count: 4
""2020-09-25 17:04:54 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601033694225, current=UP, previous=STARTING]
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:04:54 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 17:04:54 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 17:04:54 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 17:04:54 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601033694231
""2020-09-25 17:04:54 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 17:04:54 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 17:04:54 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:04:54 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 17:04:54 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 17:04:54 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-2, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 17:04:54 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:04:54 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 17:04:54 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 17:04:54 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 17:04:54 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 17:04:54 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 17:04:54 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Successfully joined group with generation 88
""2020-09-25 17:04:54 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 17:04:54 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=20, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 17:04:54 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 17:04:54 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 17:04:54 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 17:04:54 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 17:04:54 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.566 seconds (JVM running for 303.156)
""2020-09-25 17:04:54 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 17:05:12 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:05:12 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:05:12 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 17:05:13 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 17:05:13 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:05:13 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2f0e175b
""2020-09-25 17:05:14 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:05:14 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:05:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 20, CreateTime = 1601033120508, serialized key size = -1, serialized value size = 116, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":1},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:05:17 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:05:18 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 21, CreateTime = 1601033180986, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:05:18 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:05:18 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 22, CreateTime = 1601033434161, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:05:55 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:06:08 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 23, CreateTime = 1601033746729, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:08:06 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:08:07 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 24, CreateTime = 1601033881876, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:09:09 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 17:09:09 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601033949594, current=DOWN, previous=UP]
""2020-09-25 17:09:09 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:09:09 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Member consumer-2-cc07f285-78ff-40c3-ba52-5dbaa750c45e sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:09:09 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 17:09:09 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 17:09:09 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:09:09 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 17:09:09 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:09:09 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:09:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:09:09 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
""2020-09-25 17:09:09 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
""2020-09-25 17:09:09 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 17:09:12 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 17:09:12 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 17:09:12 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 17:09:15 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 17:09:15 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 17:09:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 17:09:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26ms. Found 3 JPA repository interfaces.
""2020-09-25 17:09:16 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 17:09:16 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 17:09:16 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 17:09:16 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 17:09:16 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 17:09:16 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 17:09:16 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 858 ms
""2020-09-25 17:09:16 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
""2020-09-25 17:09:16 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
""2020-09-25 17:09:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:09:16 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 17:09:17 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 17:09:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 17:09:17 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 17:09:17 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:09:17 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:09:17 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:09:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 17:09:17 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 17:09:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 17:09:17 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 17:09:18 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 17:09:18 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 17:09:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 17:09:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 17:09:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 17:09:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 17:09:18 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 17:09:18 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601033958293 with initial instances count: 4
""2020-09-25 17:09:18 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601033958296, current=UP, previous=STARTING]
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:09:18 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 17:09:18 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 17:09:18 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 17:09:18 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601033958303
""2020-09-25 17:09:18 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 17:09:18 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 17:09:18 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:09:18 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 17:09:18 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 17:09:18 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-3, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 17:09:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:09:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 17:09:18 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 17:09:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 17:09:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 17:09:18 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 17:09:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Successfully joined group with generation 90
""2020-09-25 17:09:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 17:09:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=20, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 17:09:18 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 17:09:18 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 17:09:18 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 17:09:18 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 17:09:18 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.578 seconds (JVM running for 567.285)
""2020-09-25 17:09:18 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 17:09:28 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:09:28 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:09:28 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 17:09:28 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 17:09:28 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:09:28 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@33c9e3f
""2020-09-25 17:09:28 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:09:29 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:09:30 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 21, CreateTime = 1601033180986, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy198.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy204.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:09:31 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 22, CreateTime = 1601033434161, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy198.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy204.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:09:31 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 23, CreateTime = 1601033746729, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy198.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy204.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:09:31 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 24, CreateTime = 1601033881876, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy198.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy204.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:09:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 25, CreateTime = 1601033982612, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy198.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy204.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:10:11 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 17:10:11 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 17:10:11 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601034011539, current=DOWN, previous=UP]
""2020-09-25 17:10:11 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:10:11 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Member consumer-3-3a22bba3-aad5-4674-a401-6abdb4828f2e sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:10:11 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 17:10:11 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 17:10:11 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:10:11 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 17:10:11 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:10:11 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:10:11 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:10:11 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
""2020-09-25 17:10:11 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
""2020-09-25 17:10:11 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 17:10:14 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 17:10:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 17:10:14 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 17:10:14 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 17:10:15 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 17:10:28 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 17:10:28 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 17:10:28 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 17:10:28 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56ms. Found 3 JPA repository interfaces.
""2020-09-25 17:10:29 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 17:10:29 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 17:10:29 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 17:10:29 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 17:10:29 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 17:10:29 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 17:10:29 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1703 ms
""2020-09-25 17:10:30 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 17:10:30 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 17:10:30 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:10:30 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 17:10:31 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 17:10:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 17:10:31 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 17:10:31 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:10:31 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:10:31 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:10:31 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:10:31 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:10:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 17:10:31 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 17:10:31 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 17:10:32 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 17:10:32 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 17:10:33 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 17:10:33 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 17:10:33 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 17:10:33 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 17:10:33 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 17:10:33 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 17:10:33 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 17:10:34 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601034034146 with initial instances count: 3
""2020-09-25 17:10:34 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601034034149, current=UP, previous=STARTING]
""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:10:34 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 17:10:34 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:10:34 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 17:10:34 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 17:10:34 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601034034222
""2020-09-25 17:10:34 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 17:10:34 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 17:10:34 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 17:10:34 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 17:10:34 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 17:10:34 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 17:10:34 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 17:10:34 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:10:34 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 17:10:34 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 17:10:34 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 17:10:34 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 17:10:34 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 17:10:34 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 17:10:34 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 92
""2020-09-25 17:10:34 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 17:10:34 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=21, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 17:10:34 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 17:10:34 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 21, CreateTime = 1601033180986, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy141.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy180.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:10:34 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 22, CreateTime = 1601033434161, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy141.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy180.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:10:34 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 23, CreateTime = 1601033746729, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy141.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy180.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:10:34 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 24, CreateTime = 1601033881876, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy141.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy180.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:10:34 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 25, CreateTime = 1601033982612, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy141.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy180.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:10:35 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 10.08 seconds (JVM running for 11.131)
""2020-09-25 17:11:28 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 26, CreateTime = 1601034088099, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy141.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy180.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:11:59 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 27, CreateTime = 1601034119278, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy141.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy180.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:12:57 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 17:12:57 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601034177760, current=DOWN, previous=UP]
""2020-09-25 17:12:57 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:12:57 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:12:57 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-6e848f6e-f35f-4551-95af-155b8a6a183d sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:12:57 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 17:12:57 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 17:12:57 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 17:12:57 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:12:57 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:12:57 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 17:12:57 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 17:12:57 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 17:13:00 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 17:13:00 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 17:13:00 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 17:13:03 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 17:13:03 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 17:13:04 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 17:13:04 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 3 JPA repository interfaces.
""2020-09-25 17:13:04 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 17:13:04 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 17:13:04 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 17:13:04 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 17:13:04 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 17:13:04 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 17:13:04 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 727 ms
""2020-09-25 17:13:04 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
""2020-09-25 17:13:04 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
""2020-09-25 17:13:04 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:13:04 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 17:13:04 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 17:13:04 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 17:13:04 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 17:13:04 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:13:04 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:13:05 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:13:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 17:13:05 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 17:13:05 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 17:13:05 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 17:13:05 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 17:13:06 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 17:13:06 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 17:13:06 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 17:13:06 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 17:13:06 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 17:13:06 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 17:13:06 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601034186060 with initial instances count: 4
""2020-09-25 17:13:06 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601034186062, current=UP, previous=STARTING]
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:13:06 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 17:13:06 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 17:13:06 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 17:13:06 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601034186067
""2020-09-25 17:13:06 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:13:06 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 17:13:06 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 17:13:06 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 17:13:06 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 17:13:06 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-2, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 17:13:06 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:13:06 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 17:13:06 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 17:13:06 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 17:13:06 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 17:13:06 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 17:13:06 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Successfully joined group with generation 94
""2020-09-25 17:13:06 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 17:13:06 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=21, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 17:13:06 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 17:13:06 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 17:13:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 17:13:06 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 17:13:06 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 21, CreateTime = 1601033180986, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy185.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy191.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:13:06 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 22, CreateTime = 1601033434161, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy185.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy191.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:13:06 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 23, CreateTime = 1601033746729, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy185.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy191.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:13:06 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 24, CreateTime = 1601033881876, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy185.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy191.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:13:06 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 25, CreateTime = 1601033982612, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy185.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy191.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:13:06 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 26, CreateTime = 1601034088099, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy185.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy191.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:13:06 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 27, CreateTime = 1601034119278, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2; nested exception is org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:257) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:154) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy185.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1588) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:409) ~[spring-orm-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy191.getSingleResult(Unknown Source) ~[na:na]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:618) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:605) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 31 common frames omitted
"2020-09-25 17:13:06 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.17 seconds (JVM running for 162.695)
""2020-09-25 17:13:06 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 17:13:37 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 17:13:37 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 17:13:37 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601034217413, current=DOWN, previous=UP]
""2020-09-25 17:13:37 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:13:37 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Member consumer-2-d98354b0-fb4a-4f87-bd1d-a6d0ee62b992 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:13:37 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 17:13:37 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 17:13:37 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:13:37 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 17:13:37 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:13:37 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:13:37 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
""2020-09-25 17:13:37 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
""2020-09-25 17:13:37 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 17:13:40 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 17:13:40 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 17:13:40 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 17:13:40 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 17:13:49 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 17:13:49 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 17:13:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 17:13:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 3 JPA repository interfaces.
""2020-09-25 17:13:50 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 17:13:50 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 17:13:51 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 17:13:51 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 17:13:51 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 17:13:51 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 17:13:51 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1621 ms
""2020-09-25 17:13:51 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 17:13:51 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 17:13:52 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:13:52 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 17:13:52 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 17:13:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 17:13:53 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 17:13:53 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:13:53 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:13:53 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:13:53 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:13:53 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:13:53 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 17:13:53 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 17:13:53 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 17:13:54 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 17:13:54 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 17:13:54 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 17:13:54 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 17:13:55 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 17:13:55 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 17:13:55 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 17:13:55 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 17:13:55 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 17:13:55 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601034235952 with initial instances count: 4
""2020-09-25 17:13:55 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601034235955, current=UP, previous=STARTING]
""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:13:55 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 17:13:55 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:13:56 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 17:13:56 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 17:13:56 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601034236034
""2020-09-25 17:13:56 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 17:13:56 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 17:13:56 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 17:13:56 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 17:13:56 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 17:13:56 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 17:13:56 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 17:13:56 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:13:56 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 17:13:56 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 17:13:56 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 17:13:56 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 17:13:56 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 17:13:56 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 17:13:56 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 96
""2020-09-25 17:13:56 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 17:13:56 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=21, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 17:13:56 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 17:13:56 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:13:56 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:13:56 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 17:13:56 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 17:13:56 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:13:56 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@689e9ec3
""2020-09-25 17:13:56 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:13:56 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 9.973 seconds (JVM running for 11.021)
""2020-09-25 17:13:56 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:13:56 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 22, CreateTime = 1601033434161, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:13:56 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:13:56 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 23, CreateTime = 1601033746729, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:13:56 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:13:56 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 24, CreateTime = 1601033881876, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:13:56 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:13:56 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 25, CreateTime = 1601033982612, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:13:56 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:13:56 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 26, CreateTime = 1601034088099, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:13:56 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:13:56 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 27, CreateTime = 1601034119278, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:13:57 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:15:18 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:15:18 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 28, CreateTime = 1601034318235, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:16:23 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:16:23 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 29, CreateTime = 1601034383855, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 17:18:14 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 17:18:14 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 17:18:14 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601034494807, current=DOWN, previous=UP]
""2020-09-25 17:18:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:18:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:18:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-0e3a7aeb-d9fa-46ee-9d3a-3a4738f9a91e sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:18:14 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 17:18:14 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 17:18:14 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 17:18:14 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:18:14 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:18:14 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:18:14 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 17:18:14 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 17:18:14 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 17:18:17 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 17:18:17 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 17:18:17 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 17:18:18 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 17:18:18 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 17:57:41 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 17:57:41 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 17:57:42 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 17:57:42 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83ms. Found 3 JPA repository interfaces.
""2020-09-25 17:57:42 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 17:57:42 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 17:57:43 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 17:57:43 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 17:57:43 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 17:57:43 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 17:57:43 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2447 ms
""2020-09-25 17:57:44 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 17:57:44 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 17:57:45 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 17:57:45 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 17:57:45 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 17:57:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 17:57:46 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 17:57:46 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:57:46 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:57:46 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 17:57:46 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 17:57:46 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 17:57:46 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 17:57:46 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 17:57:46 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 17:57:47 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 17:57:48 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 17:57:48 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 17:57:48 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 17:57:49 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 17:57:49 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 17:57:49 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 17:57:49 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 17:57:49 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 17:57:50 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601036870422 with initial instances count: 1
""2020-09-25 17:57:50 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601036870427, current=UP, previous=STARTING]
""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 17:57:50 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 17:57:50 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 17:57:50 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 17:57:50 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 17:57:50 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601036870567
""2020-09-25 17:57:50 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 17:57:50 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 17:57:50 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 17:57:50 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 17:57:50 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 17:57:50 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 17:57:50 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 17:57:50 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 17:57:50 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 17:57:50 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 17:57:50 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 17:57:50 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 17:57:50 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 17:57:50 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 17:57:50 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 98
""2020-09-25 17:57:50 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 17:57:50 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=22, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 17:57:50 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 17:57:51 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:57:51 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 17:57:51 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 17:57:51 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 17:57:51 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3c626372
""2020-09-25 17:57:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 22, CreateTime = 1601033434161, serialized key size = -1, serialized value size = 117, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":1,"quantity":10},{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119) ~[feign-core-10.10.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:na]
	at com.sun.proxy.$Proxy151.getTotalCost(Unknown Source) ~[na:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:72) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 27 common frames omitted
"2020-09-25 17:57:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 23, CreateTime = 1601033746729, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119) ~[feign-core-10.10.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:na]
	at com.sun.proxy.$Proxy151.getTotalCost(Unknown Source) ~[na:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:72) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 27 common frames omitted
"2020-09-25 17:57:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 24, CreateTime = 1601033881876, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119) ~[feign-core-10.10.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:na]
	at com.sun.proxy.$Proxy151.getTotalCost(Unknown Source) ~[na:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:72) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 27 common frames omitted
"2020-09-25 17:57:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 25, CreateTime = 1601033982612, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":1,"foodList":[{"foodId":1,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119) ~[feign-core-10.10.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:na]
	at com.sun.proxy.$Proxy151.getTotalCost(Unknown Source) ~[na:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:72) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 27 common frames omitted
"2020-09-25 17:57:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 26, CreateTime = 1601034088099, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119) ~[feign-core-10.10.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:na]
	at com.sun.proxy.$Proxy151.getTotalCost(Unknown Source) ~[na:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:72) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 27 common frames omitted
"2020-09-25 17:57:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 27, CreateTime = 1601034119278, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119) ~[feign-core-10.10.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:na]
	at com.sun.proxy.$Proxy151.getTotalCost(Unknown Source) ~[na:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:72) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 27 common frames omitted
"2020-09-25 17:57:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 28, CreateTime = 1601034318235, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119) ~[feign-core-10.10.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:na]
	at com.sun.proxy.$Proxy151.getTotalCost(Unknown Source) ~[na:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:72) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 27 common frames omitted
"2020-09-25 17:57:51 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 29, CreateTime = 1601034383855, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"105351997096862330718","restaurantId":4,"foodList":[{"foodId":2,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice; nested exception is java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:90) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:119) ~[feign-core-10.10.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:89) ~[feign-core-10.10.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:100) ~[feign-core-10.10.1.jar:na]
	at com.sun.proxy.$Proxy151.getTotalCost(Unknown Source) ~[na:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:72) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: searchservice
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:83) ~[spring-cloud-openfeign-core-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 27 common frames omitted
"2020-09-25 17:57:51 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 14.541 seconds (JVM running for 16.327)
""2020-09-25 17:58:22 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 17:59:13 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:59:54 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 17:59:54 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 31, CreateTime = 1601036994173, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:00:53 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:00:53 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 32, CreateTime = 1601037053006, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:01:27 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2020-09-25 18:01:27 INFO  o.s.w.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2020-09-25 18:01:27 DEBUG o.s.w.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2020-09-25 18:01:27 DEBUG o.s.w.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2020-09-25 18:01:27 INFO  o.s.w.servlet.DispatcherServlet - Completed initialization in 15 ms
""2020-09-25 18:01:27 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/nithinmk26%40gmail.com", parameters={}
""2020-09-25 18:01:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 18:01:27 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 18:01:27 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 18:01:27 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@6c1754c7]
""2020-09-25 18:01:27 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:02:50 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:05:09 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:05:09 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037309182, current=DOWN, previous=UP]
""2020-09-25 18:05:09 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:05:09 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-ca7be031-2425-4a58-8ee2-c75aca81cc61 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:05:09 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 18:05:09 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 18:05:09 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:05:09 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 18:05:09 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:05:09 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 18:05:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:05:09 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 18:05:09 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 18:05:09 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:05:12 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:05:12 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:05:12 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:05:16 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:05:16 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:05:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:05:16 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26ms. Found 3 JPA repository interfaces.
""2020-09-25 18:05:16 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:05:16 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:05:16 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:05:16 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:05:16 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:05:17 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:05:17 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 927 ms
""2020-09-25 18:05:17 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
""2020-09-25 18:05:17 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
""2020-09-25 18:05:17 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:05:17 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:05:17 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:05:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:05:17 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:05:17 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:05:17 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:05:17 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:05:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:05:17 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:05:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:05:18 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:05:18 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:05:18 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:05:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:05:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:05:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:05:18 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:05:18 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:05:18 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601037318954 with initial instances count: 3
""2020-09-25 18:05:18 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037318956, current=UP, previous=STARTING]
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:05:18 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:05:18 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:05:18 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:05:18 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601037318964
""2020-09-25 18:05:18 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:05:18 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:05:18 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:05:18 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:05:18 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:05:18 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-2, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:05:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:05:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:05:18 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:05:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 18:05:18 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:05:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 18:05:18 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Successfully joined group with generation 100
""2020-09-25 18:05:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 18:05:18 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=31, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 18:05:18 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 18:05:19 ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Stopping container due to an Error
"java.lang.Error: Unresolved compilation problem: 
	This method must return a result of type Object

	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:64) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
"2020-09-25 18:05:19 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Member consumer-2-65a4061a-8ccb-4770-a213-49bc767707b1 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:05:19 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 18:05:19 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 18:05:19 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 18:05:19 ERROR o.s.k.l.KafkaMessageListenerContainer - Error while stopping the container: 
"java.lang.Error: Unresolved compilation problem: 
	This method must return a result of type Object

	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:64) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
"2020-09-25 18:05:19 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:05:19 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:05:19 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:05:19 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.072 seconds (JVM running for 464.334)
""2020-09-25 18:05:19 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 18:06:06 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:06:06 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037366081, current=DOWN, previous=UP]
""2020-09-25 18:06:06 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:06:06 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:06:06 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:06:06 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
""2020-09-25 18:06:06 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:06:06 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
""2020-09-25 18:06:06 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:06:09 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:06:09 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:06:09 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:06:12 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:06:12 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:06:12 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:06:12 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26ms. Found 3 JPA repository interfaces.
""2020-09-25 18:06:12 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:06:12 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:06:13 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:06:13 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:06:13 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:06:13 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:06:13 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1044 ms
""2020-09-25 18:06:13 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
""2020-09-25 18:06:13 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
""2020-09-25 18:06:13 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:06:13 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:06:13 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:06:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:06:13 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:06:13 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:06:13 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:06:13 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:06:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:06:13 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:06:13 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:06:14 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:06:14 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:06:14 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:06:14 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:06:14 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:06:14 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:06:14 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:06:14 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:06:14 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601037374956 with initial instances count: 3
""2020-09-25 18:06:14 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037374960, current=UP, previous=STARTING]
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:06:14 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:06:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:06:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:06:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601037374967
""2020-09-25 18:06:14 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:06:14 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:06:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:06:14 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:06:14 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:06:14 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-3, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:06:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:06:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:06:14 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:06:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 18:06:14 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:06:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 18:06:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Successfully joined group with generation 102
""2020-09-25 18:06:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 18:06:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=31, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 18:06:14 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 18:06:15 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:06:15 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:06:15 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:06:15 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:06:15 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 18:06:15 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 18:06:15 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 18:06:15 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:06:15 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@41a10ddd
""2020-09-25 18:06:15 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:06:15 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:06:15 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 32, CreateTime = 1601037053006, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:06:15 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.941 seconds (JVM running for 520.38)
""2020-09-25 18:06:15 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 18:06:16 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:06:30 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:06:30 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 33, CreateTime = 1601037390799, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:07:19 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:07:19 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037439838, current=DOWN, previous=UP]
""2020-09-25 18:07:19 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:07:19 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Member consumer-3-1d5d9ffe-91b2-4a7f-9042-13f56c29cfb6 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:07:19 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 18:07:19 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 18:07:19 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:07:19 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 18:07:19 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:07:19 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 18:07:19 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:07:19 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
""2020-09-25 18:07:19 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
""2020-09-25 18:07:19 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:07:22 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:07:22 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:07:22 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:07:26 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:07:26 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:07:26 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:07:26 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 3 JPA repository interfaces.
""2020-09-25 18:07:26 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:07:26 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:07:26 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:07:26 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:07:26 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:07:26 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:07:26 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 866 ms
""2020-09-25 18:07:26 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
""2020-09-25 18:07:26 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
""2020-09-25 18:07:27 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:07:27 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:07:27 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:07:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:07:27 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:07:27 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:07:27 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:07:27 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:07:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:07:27 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:07:27 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:07:27 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:07:28 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:07:28 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:07:28 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:07:28 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:07:28 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:07:28 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:07:28 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:07:28 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601037448467 with initial instances count: 3
""2020-09-25 18:07:28 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037448471, current=UP, previous=STARTING]
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:07:28 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:07:28 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:07:28 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:07:28 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601037448481
""2020-09-25 18:07:28 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-4, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:07:28 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:07:28 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:07:28 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:07:28 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:07:28 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-4, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:07:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:07:28 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:07:28 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:07:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] (Re-)joining group
""2020-09-25 18:07:28 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:07:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] (Re-)joining group
""2020-09-25 18:07:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Successfully joined group with generation 104
""2020-09-25 18:07:28 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 18:07:28 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=32, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 18:07:28 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 18:07:28 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:07:28 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:07:28 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:07:28 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:07:28 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 18:07:28 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 18:07:28 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 18:07:28 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:07:28 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2e467cd0
""2020-09-25 18:07:28 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:07:28 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 32, CreateTime = 1601037053006, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:07:28 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:07:28 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 33, CreateTime = 1601037390799, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:07:29 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.646 seconds (JVM running for 593.892)
""2020-09-25 18:07:29 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 18:07:29 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:09:13 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:09:13 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 34, CreateTime = 1601037552946, serialized key size = -1, serialized value size = 91, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":5,"foodList":[{"foodId":2,"quantity":10}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.SearchServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:585) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.write(AbstractPersistentCollection.java:409) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.add(PersistentBag.java:407) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:81) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:57) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:09:28 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2020-09-25 18:09:28 INFO  o.s.w.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2020-09-25 18:09:28 DEBUG o.s.w.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2020-09-25 18:09:28 DEBUG o.s.w.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2020-09-25 18:09:28 INFO  o.s.w.servlet.DispatcherServlet - Completed initialization in 18 ms
""2020-09-25 18:09:28 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/nithinmk26%40gmail.com", parameters={}
""2020-09-25 18:09:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 18:09:28 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 18:09:28 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 18:09:28 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@1b3ebf81]
""2020-09-25 18:09:28 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:09:38 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:10:51 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPaynow/104885148526304774223/Nithin/nithinmk26%40gmail.com", parameters={}
""2020-09-25 18:10:51 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(PaymentDto, String, String, String)
""2020-09-25 18:10:51 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.mindtree.order.dto.PaymentDto@1f552544]
""2020-09-25 18:10:51 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 18:10:51 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 18:10:51 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@44c9a36f]
""2020-09-25 18:10:51 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:11:10 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:11:10 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037670941, current=DOWN, previous=UP]
""2020-09-25 18:11:10 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:11:10 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Member consumer-4-ea9214ef-c20b-47e4-9792-67a172992132 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:11:10 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-4, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 18:11:10 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 18:11:10 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:11:10 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 18:11:10 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:11:10 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 18:11:10 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:11:10 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
""2020-09-25 18:11:10 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
""2020-09-25 18:11:10 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:11:13 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:11:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:11:14 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:11:19 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:11:19 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:11:20 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:11:20 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95ms. Found 3 JPA repository interfaces.
""2020-09-25 18:11:21 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:11:21 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:11:21 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:11:21 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:11:21 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:11:21 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:11:21 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2792 ms
""2020-09-25 18:11:22 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
""2020-09-25 18:11:22 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
""2020-09-25 18:11:22 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:11:22 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:11:22 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:11:22 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:11:23 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:11:23 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:11:23 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:11:23 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:11:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:11:23 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:11:23 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:11:24 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:11:25 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:11:25 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:11:25 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:11:25 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:11:25 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:11:25 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:11:25 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:11:25 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601037685873 with initial instances count: 3
""2020-09-25 18:11:25 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037685875, current=UP, previous=STARTING]
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:11:25 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:11:25 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:11:25 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:11:25 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601037685880
""2020-09-25 18:11:25 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-5, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:11:25 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:11:25 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:11:25 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:11:25 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:11:25 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-5, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:11:25 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:11:25 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:11:25 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:11:25 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] (Re-)joining group
""2020-09-25 18:11:25 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:11:25 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] (Re-)joining group
""2020-09-25 18:11:25 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Successfully joined group with generation 106
""2020-09-25 18:11:25 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 18:11:25 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=36, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 18:11:25 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 18:11:25 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:11:26 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:11:26 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:11:27 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 12.034 seconds (JVM running for 831.845)
""2020-09-25 18:11:27 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 18:12:23 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2020-09-25 18:12:23 INFO  o.s.w.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2020-09-25 18:12:23 DEBUG o.s.w.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2020-09-25 18:12:24 INFO  o.s.w.servlet.DispatcherServlet - Completed initialization in 9 ms
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/swagger-ui.html", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/", "classpath:/resources/", "classpath:/static/", "classpath:/public/", "/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/css/typography.css", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.s.r.ResourceHttpRequestHandler - Resource not found
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/css/reset.css", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/css/screen.css", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/object-assign-pollyfill.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/jquery-1.8.0.min.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/jquery.slideto.min.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/jquery.wiggle.min.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/jquery.ba-bbq.min.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;q=0.1', given [text/css, */*;q=0.1] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/lodash.min.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/backbone-min.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/handlebars-4.0.5.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{timestamp=Fri Sep 25 18:12:24 IST 2020, status=404, error=Not Found, message=No message available,  (truncated)...]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/swagger-ui.min.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/highlight.9.1.0.pack_extended.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/highlight.9.1.0.pack.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/jsoneditor.min.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/marked.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/lib/swagger-oauth.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/springfox.js", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/images/logo_small.png", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/css/print.css", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/swagger-resources/configuration/ui", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to springfox.documentation.swagger.web.ApiResourceController#uiConfiguration()
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [springfox.documentation.swagger.web.UiConfiguration@6161f079]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/swagger-resources", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to springfox.documentation.swagger.web.ApiResourceController#swaggerResources()
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [[springfox.documentation.swagger.web.SwaggerResource@5e1d181d]]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/v2/api-docs", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - GET "/webjars/springfox-swagger-ui/images/favicon-32x32.png", parameters={}
""2020-09-25 18:12:24 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler ["classpath:/META-INF/resources/webjars/"]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json;charset=utf-8', given [application/json;charset=utf-8, */*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 18:12:24 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [springfox.documentation.spring.web.json.Json@21bf204f]
""2020-09-25 18:12:24 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:12:25 DEBUG o.s.w.servlet.DispatcherServlet - GET "/swagger-resources/configuration/security", parameters={}
""2020-09-25 18:12:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to springfox.documentation.swagger.web.ApiResourceController#securityConfiguration()
""2020-09-25 18:12:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/javascript, */*;q=0.01] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 18:12:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [springfox.documentation.swagger.web.SecurityConfiguration@6fea1224]
""2020-09-25 18:12:25 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 18:13:15 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 18:13:15 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:13:15 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601037795653, current=DOWN, previous=UP]
""2020-09-25 18:13:15 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:13:15 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Member consumer-5-3570c3af-b083-403d-929b-1ead704c8c92 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:13:15 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-5, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 18:13:15 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 18:13:15 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:13:15 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 18:13:15 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:13:15 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:13:15 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
""2020-09-25 18:13:15 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
""2020-09-25 18:13:15 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:13:18 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:13:18 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:13:18 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:13:19 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 18:13:19 INFO  o.a.c.c.C.[.[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
""2020-09-25 18:13:19 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 18:42:48 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:42:48 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:42:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:42:50 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127ms. Found 3 JPA repository interfaces.
""2020-09-25 18:42:50 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:42:50 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:42:51 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:42:51 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:42:51 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:42:52 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:42:52 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3585 ms
""2020-09-25 18:42:53 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 18:42:53 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 18:42:54 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:42:54 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:42:55 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:42:55 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:42:55 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:42:55 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:42:55 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:42:55 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:42:55 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:42:56 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:42:56 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:42:56 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:42:56 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:42:57 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:42:58 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:42:58 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:42:58 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:42:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:42:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:42:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:42:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:43:00 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:43:00 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601039580808 with initial instances count: 2
""2020-09-25 18:43:00 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601039580812, current=UP, previous=STARTING]
""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:43:00 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:43:00 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:43:00 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:43:00 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:43:00 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601039580946
""2020-09-25 18:43:00 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:43:00 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:43:00 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:43:00 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:43:01 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:43:01 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:43:01 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:43:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:43:01 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:43:01 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:43:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 18:43:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:43:01 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:43:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 18:43:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 108
""2020-09-25 18:43:01 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 18:43:01 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=36, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 18:43:01 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 18:43:01 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 18.268 seconds (JVM running for 20.181)
""2020-09-25 18:44:09 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:44:09 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 18:44:09 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 18:44:09 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 18:44:09 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:44:09 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5895ec7
""2020-09-25 18:44:09 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 18:44:10 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 18:44:32 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is java.lang.NullPointerException; nested exception is java.lang.NullPointerException
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.NullPointerException: null
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:45:28 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is java.lang.NullPointerException; nested exception is java.lang.NullPointerException
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: java.lang.NullPointerException: null
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:46:45 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:46:45 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601039805096, current=DOWN, previous=UP]
""2020-09-25 18:46:45 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:46:45 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:46:45 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-08ca3da2-5d52-481f-999c-2cef4c3b9f95 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:46:45 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 18:46:45 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 18:46:45 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 18:46:45 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:46:45 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 18:46:45 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:46:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 18:46:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 18:46:45 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:46:48 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:46:48 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:46:48 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:46:51 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:46:51 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:46:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:46:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 3 JPA repository interfaces.
""2020-09-25 18:46:51 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:46:51 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:46:52 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:46:52 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:46:52 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:46:52 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:46:52 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 808 ms
""2020-09-25 18:46:52 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
""2020-09-25 18:46:52 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
""2020-09-25 18:46:52 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:46:52 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:46:52 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:46:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:46:52 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:46:52 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:46:52 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:46:52 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:46:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:46:52 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:46:52 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:46:53 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:46:53 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:46:53 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:46:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:46:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:46:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:46:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:46:53 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:46:53 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601039813796 with initial instances count: 3
""2020-09-25 18:46:53 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601039813799, current=UP, previous=STARTING]
""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:46:53 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:46:53 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:46:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:46:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:46:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601039813808
""2020-09-25 18:46:53 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:46:53 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:46:53 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:46:53 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:46:53 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-2, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:46:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:46:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:46:53 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:46:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 18:46:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 18:46:53 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:46:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Successfully joined group with generation 110
""2020-09-25 18:46:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 18:46:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 18:46:53 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 18:46:53 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:46:53 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:46:53 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:46:53 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:46:53 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:46:54 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.461 seconds (JVM running for 252.731)
""2020-09-25 18:46:54 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 18:46:58 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:47:44 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 18:47:44 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:47:44 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601039864996, current=DOWN, previous=UP]
""2020-09-25 18:47:44 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:47:45 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Member consumer-2-ee54f654-4a26-432d-a1d9-4f4ba8fc6a3b sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:47:45 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 18:47:45 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 18:47:45 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:47:45 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 18:47:45 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:47:45 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:47:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
""2020-09-25 18:47:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
""2020-09-25 18:47:45 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:47:48 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:47:48 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:47:48 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:47:48 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 18:47:48 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 18:47:58 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:47:58 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:48:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:48:00 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93ms. Found 3 JPA repository interfaces.
""2020-09-25 18:48:00 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:48:00 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:48:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:48:01 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:48:01 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:48:01 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:48:01 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2618 ms
""2020-09-25 18:48:02 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 18:48:02 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 18:48:03 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:48:03 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:48:04 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:48:04 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:48:04 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:48:04 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:48:04 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:48:04 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:48:04 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:48:04 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:48:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:48:05 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:48:05 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:48:05 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:48:06 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:48:06 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:48:06 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:48:07 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:48:07 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:48:07 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:48:07 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:48:07 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:48:07 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:48:07 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:48:07 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:48:07 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:48:07 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:48:07 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:48:07 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:48:08 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:48:08 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:48:08 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:48:08 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601039888056 with initial instances count: 2
""2020-09-25 18:48:08 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:48:08 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601039888060, current=UP, previous=STARTING]
""2020-09-25 18:48:08 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:48:08 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:48:08 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:48:08 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:48:08 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:48:08 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601039888187
""2020-09-25 18:48:08 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:48:08 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:48:08 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:48:08 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:48:08 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:48:08 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:48:08 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:48:08 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:48:08 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:48:08 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:48:08 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 18:48:08 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:48:08 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:48:08 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 18:48:08 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 112
""2020-09-25 18:48:08 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 18:48:08 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 18:48:08 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 18:48:09 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 13.92 seconds (JVM running for 15.634)
""2020-09-25 18:48:21 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:48:22 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:48:23 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 18:53:07 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:53:32 WARN  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] This member will leave the group because consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
""2020-09-25 18:53:32 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-ec1de2c0-53f9-47f3-aac9-0e74d1c6bace sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:55:04 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:55:04 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601040304115, current=DOWN, previous=UP]
""2020-09-25 18:55:04 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:55:04 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:55:34 INFO  o.s.c.s.DefaultLifecycleProcessor - Failed to shut down 1 bean with phase value 2147483547 within timeout of 30000ms: [org.springframework.kafka.config.internalKafkaListenerEndpointRegistry]
""2020-09-25 18:55:34 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:55:34 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:55:34 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 18:55:34 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 18:55:34 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:55:37 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:55:37 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:55:37 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:55:40 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:55:40 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:55:41 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:55:41 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33ms. Found 3 JPA repository interfaces.
""2020-09-25 18:55:41 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:55:41 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:55:41 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:55:41 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:55:41 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:55:41 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:55:41 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1067 ms
""2020-09-25 18:55:41 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
""2020-09-25 18:55:42 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
""2020-09-25 18:55:42 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:55:42 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:55:42 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:55:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:55:42 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:55:42 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:55:42 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:55:42 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:55:42 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:55:42 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:55:42 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:55:42 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'foodRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.FoodRepository.findByCartId(int)! No property id found for type Cart! Traversed path: CartItems.cart.
""2020-09-25 18:55:42 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:55:42 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:55:42 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
""2020-09-25 18:55:42 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
""2020-09-25 18:55:42 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 18:55:42 INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
""2020-09-25 18:55:42 ERROR o.s.boot.SpringApplication - Application run failed
"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'foodRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.FoodRepository.findByCartId(int)! No property id found for type Cart! Traversed path: CartItems.cart.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:878) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at com.mindtree.order.OrderServiceApplication.main(OrderServiceApplication.java:16) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.FoodRepository.findByCartId(int)! No property id found for type Cart! Traversed path: CartItems.cart.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:209) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:78) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:574) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:567) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Iterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:569) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:559) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.Optional.map(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:559) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:332) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:121) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 21 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property id found for type Cart! Traversed path: CartItems.cart.
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:392) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:416) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:82) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:251) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:252) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:381) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:382) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:97) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	... 47 common frames omitted
"2020-09-25 18:58:30 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:58:30 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:58:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:58:30 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29ms. Found 3 JPA repository interfaces.
""2020-09-25 18:58:30 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:58:30 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:58:31 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:58:31 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:58:31 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:58:31 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:58:31 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1051 ms
""2020-09-25 18:58:31 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
""2020-09-25 18:58:31 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
""2020-09-25 18:58:31 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:58:31 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:58:31 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:58:31 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:58:31 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:58:31 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:58:31 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:58:32 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:58:32 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:58:32 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:58:32 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:58:32 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:58:33 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:58:33 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:58:33 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:58:33 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:58:33 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:58:33 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:58:33 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:58:33 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601040513336 with initial instances count: 2
""2020-09-25 18:58:33 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601040513340, current=UP, previous=STARTING]
""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:58:33 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:58:33 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:58:33 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:58:33 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:58:33 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601040513355
""2020-09-25 18:58:33 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:58:33 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:58:33 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:58:33 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:58:33 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-2, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:58:33 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:58:33 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:58:33 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:58:33 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 18:58:33 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 18:58:33 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:58:33 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Successfully joined group with generation 114
""2020-09-25 18:58:33 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 18:58:33 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 18:58:33 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 18:58:33 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:58:33 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:58:33 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:58:34 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.523 seconds (JVM running for 640.633)
""2020-09-25 18:58:34 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 18:59:09 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 18:59:09 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601040549539, current=DOWN, previous=UP]
""2020-09-25 18:59:09 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:59:09 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:59:39 INFO  o.s.c.s.DefaultLifecycleProcessor - Failed to shut down 1 bean with phase value 2147483547 within timeout of 30000ms: [org.springframework.kafka.config.internalKafkaListenerEndpointRegistry]
""2020-09-25 18:59:39 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:59:39 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:59:39 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
""2020-09-25 18:59:39 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
""2020-09-25 18:59:39 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 18:59:39 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 18:59:39 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 18:59:39 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 18:59:43 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 18:59:43 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 18:59:43 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 18:59:43 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29ms. Found 3 JPA repository interfaces.
""2020-09-25 18:59:43 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 18:59:43 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 18:59:44 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 18:59:44 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 18:59:44 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 18:59:44 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 18:59:44 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 989 ms
""2020-09-25 18:59:44 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
""2020-09-25 18:59:44 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
""2020-09-25 18:59:44 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 18:59:44 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 18:59:44 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 18:59:44 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 18:59:44 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 18:59:44 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 18:59:44 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 18:59:44 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 18:59:44 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 18:59:44 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 18:59:44 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 18:59:45 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 18:59:45 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 18:59:45 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 18:59:45 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 18:59:45 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 18:59:45 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 18:59:45 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 18:59:45 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 18:59:45 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601040585930 with initial instances count: 3
""2020-09-25 18:59:45 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601040585932, current=UP, previous=STARTING]
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 18:59:45 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 18:59:45 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 18:59:45 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 18:59:45 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601040585940
""2020-09-25 18:59:45 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 18:59:45 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 18:59:45 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 18:59:45 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 18:59:45 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 18:59:45 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-3, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 18:59:45 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 18:59:45 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 18:59:45 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 18:59:45 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 18:59:45 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 18:59:45 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 18:59:45 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 18:59:46 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 18:59:46 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 18:59:46 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 18:59:46 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.112 seconds (JVM running for 713.114)
""2020-09-25 18:59:46 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 18:59:49 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 18:59:52 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 18:59:55 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 18:59:58 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:04 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:07 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:10 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:13 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:16 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:19 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:25 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:31 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:34 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:37 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:40 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:43 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:46 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:49 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:52 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:55 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:00:58 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:04 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:07 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:10 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:13 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:16 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:19 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:25 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:28 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:31 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:34 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:37 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:40 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:43 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:46 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:49 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:52 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:55 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:58 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Attempt to heartbeat failed since group is rebalancing
""2020-09-25 19:01:59 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 40, CreateTime = 1601039912064, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:01:59 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:01:59 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:01:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null) is unavailable or invalid, will attempt rediscovery
""2020-09-25 19:01:59 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:01:59 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments(ConstructorResolver.java:831) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:446) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments(ConstructorResolver.java:831) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:446) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy193.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:01:59 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy193.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 46 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:01:59 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy193.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 46 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:01:59 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 40, CreateTime = 1601039912064, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy193.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 46 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d48cd9e has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:01:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Member consumer-2-802ef754-d060-4faf-9b69-7a0afd4fdbc1 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:01:59 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:01:59 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:01:59 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:01:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Successfully joined group with generation 115
""2020-09-25 19:01:59 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:01:59 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:01:59 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:02:00 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:02:01 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:02:01 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:02:02 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 40, CreateTime = 1601039912064, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:02:02 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 41, CreateTime = 1601040574256, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:02:02 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 42, CreateTime = 1601040620825, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:03:20 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:03:20 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601040800554, current=DOWN, previous=UP]
""2020-09-25 19:03:20 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:03:20 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Member consumer-3-1c856f0d-9c59-473d-b95b-b7cd6474f6fd sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:03:20 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:03:20 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:03:20 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:03:20 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:03:20 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:03:20 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:03:20 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
""2020-09-25 19:03:20 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
""2020-09-25 19:03:20 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:03:23 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:03:23 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:03:23 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:03:26 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:03:26 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:03:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:03:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33ms. Found 3 JPA repository interfaces.
""2020-09-25 19:03:27 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:03:27 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:03:27 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:03:27 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:03:27 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:03:27 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:03:27 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 919 ms
""2020-09-25 19:03:27 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
""2020-09-25 19:03:27 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
""2020-09-25 19:03:28 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:03:28 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:03:28 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'orderDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderDaoImpl': Unsatisfied dependency expressed through field 'cartRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
""2020-09-25 19:03:28 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:03:28 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
""2020-09-25 19:03:28 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
""2020-09-25 19:03:28 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 19:03:28 INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
""2020-09-25 19:03:28 ERROR o.s.boot.SpringApplication - Application run failed
"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'orderDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderDaoImpl': Unsatisfied dependency expressed through field 'cartRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at com.mindtree.order.OrderServiceApplication.main(OrderServiceApplication.java:16) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'orderDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderDaoImpl': Unsatisfied dependency expressed through field 'cartRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderDaoImpl': Unsatisfied dependency expressed through field 'cartRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 50 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:209) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:78) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:574) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:567) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Iterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:569) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:559) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.Optional.map(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:559) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:332) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:121) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property fetchUserCart found for type Cart!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:82) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:251) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:252) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:381) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:382) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:94) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	... 86 common frames omitted
"2020-09-25 19:04:44 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:04:44 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:04:44 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:04:44 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 3 JPA repository interfaces.
""2020-09-25 19:04:44 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:04:44 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:04:45 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:04:45 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:04:45 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:04:45 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:04:45 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 930 ms
""2020-09-25 19:04:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
""2020-09-25 19:04:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
""2020-09-25 19:04:45 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:04:45 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:04:45 WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'orderDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderDaoImpl': Unsatisfied dependency expressed through field 'cartRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
""2020-09-25 19:04:45 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:04:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
""2020-09-25 19:04:45 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
""2020-09-25 19:04:45 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 19:04:45 INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
""2020-09-25 19:04:45 ERROR o.s.boot.SpringApplication - Application run failed
"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderController': Unsatisfied dependency expressed through field 'orderService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'orderDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderDaoImpl': Unsatisfied dependency expressed through field 'cartRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215) [spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at com.mindtree.order.OrderServiceApplication.main(OrderServiceApplication.java:16) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderServiceImpl': Unsatisfied dependency expressed through field 'orderDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderDaoImpl': Unsatisfied dependency expressed through field 'cartRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderDaoImpl': Unsatisfied dependency expressed through field 'cartRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 37 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'cartRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 50 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.mindtree.order.repository.CartRepository.fetchUserCart(java.lang.String)! No property fetchUserCart found for type Cart!
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:103) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:209) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:78) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lookupQuery(RepositoryFactorySupport.java:574) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(RepositoryFactorySupport.java:567) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Iterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.mapMethodsToQuery(RepositoryFactorySupport.java:569) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$new$0(RepositoryFactorySupport.java:559) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.Optional.map(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:559) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:332) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:297) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:212) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.util.Lazy.get(Lazy.java:94) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:300) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:121) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1790) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property fetchUserCart found for type Cart!
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:94) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:382) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:358) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:311) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.concurrent.ConcurrentMap.computeIfAbsent(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:293) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:276) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:82) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:251) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:252) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:381) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) ~[na:1.8.0_241]
	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) ~[na:1.8.0_241]
	at java.util.stream.ReferencePipeline.collect(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:382) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:94) ~[spring-data-commons-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	... 86 common frames omitted
"2020-09-25 19:05:11 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:05:11 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:05:11 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:05:11 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26ms. Found 3 JPA repository interfaces.
""2020-09-25 19:05:11 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:05:11 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:05:12 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:05:12 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:05:12 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:05:12 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:05:12 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 950 ms
""2020-09-25 19:05:12 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
""2020-09-25 19:05:12 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
""2020-09-25 19:05:12 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:05:12 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:05:12 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:05:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:05:13 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:05:13 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:05:13 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:05:13 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:05:13 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:05:13 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:05:13 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:05:13 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:05:14 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:05:14 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:05:14 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:05:14 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:05:14 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:05:14 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:05:14 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:05:14 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601040914453 with initial instances count: 2
""2020-09-25 19:05:14 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601040914456, current=UP, previous=STARTING]
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:05:14 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:05:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:05:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:05:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601040914463
""2020-09-25 19:05:14 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-4, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:05:14 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:05:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:05:14 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:05:14 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:05:14 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-4, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:05:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:05:14 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:05:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:05:14 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:05:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] (Re-)joining group
""2020-09-25 19:05:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] (Re-)joining group
""2020-09-25 19:05:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Successfully joined group with generation 117
""2020-09-25 19:05:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:05:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:05:14 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:05:14 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:05:14 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:05:14 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:05:15 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.416 seconds (JVM running for 1041.692)
""2020-09-25 19:05:15 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:10:14 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:10:14 WARN  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] This member will leave the group because consumer poll timeout has expired. This means the time between subsequent calls to poll() was longer than the configured max.poll.interval.ms, which typically implies that the poll loop is spending too much time processing messages. You can address this either by increasing max.poll.interval.ms or by reducing the maximum size of batches returned in poll() with max.poll.records.
""2020-09-25 19:10:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Member consumer-4-da9e91e8-4848-48c5-ab90-bb781b45f5d4 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:15:14 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:15:27 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:15:27 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041527301, current=DOWN, previous=UP]
""2020-09-25 19:15:27 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:15:27 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:15:57 INFO  o.s.c.s.DefaultLifecycleProcessor - Failed to shut down 1 bean with phase value 2147483547 within timeout of 30000ms: [org.springframework.kafka.config.internalKafkaListenerEndpointRegistry]
""2020-09-25 19:15:57 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:15:57 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:15:57 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
""2020-09-25 19:15:57 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
""2020-09-25 19:15:57 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:16:00 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:16:00 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:16:00 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:16:03 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:16:03 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:16:04 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:16:04 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 3 JPA repository interfaces.
""2020-09-25 19:16:04 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:16:04 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:16:04 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:16:04 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:16:04 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:16:04 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:16:04 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 996 ms
""2020-09-25 19:16:04 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
""2020-09-25 19:16:04 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
""2020-09-25 19:16:05 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:16:05 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:16:05 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:16:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:16:05 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:16:05 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:16:05 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:16:05 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:16:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:16:05 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:16:05 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:16:06 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:16:06 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:16:06 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:16:06 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:16:06 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:16:06 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:16:06 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:16:06 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:16:06 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601041566808 with initial instances count: 3
""2020-09-25 19:16:06 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041566810, current=UP, previous=STARTING]
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:16:06 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:16:06 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:16:06 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:16:06 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601041566816
""2020-09-25 19:16:06 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:16:06 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-5, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:16:06 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:16:06 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:16:06 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:16:06 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-5, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:16:06 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:16:06 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:16:06 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:16:06 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] (Re-)joining group
""2020-09-25 19:16:06 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:16:06 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] (Re-)joining group
""2020-09-25 19:16:06 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Successfully joined group with generation 119
""2020-09-25 19:16:06 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:16:06 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:16:06 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:16:06 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:16:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:16:06 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:16:07 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.198 seconds (JVM running for 1693.933)
""2020-09-25 19:16:07 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:17:14 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:17:18 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments(ConstructorResolver.java:831) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:446) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments(ConstructorResolver.java:831) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:446) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy222.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:17:22 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:17:26 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy222.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 46 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:17:35 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:17:38 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 40, CreateTime = 1601039912064, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy222.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 46 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:17:39 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 41, CreateTime = 1601040574256, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy222.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 46 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:17:40 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:17:41 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 42, CreateTime = 1601040620825, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy222.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 46 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:17:42 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 43, CreateTime = 1601040823621, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
Related cause: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.mindtree.order.proxy.SearchProxy': Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry' available
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'inMemoryDatabaseShutdownExecutor' defined in class path resource [org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class]: Unsatisfied dependency expressed through method 'inMemoryDatabaseShutdownExecutor' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:311) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.BeanFactoryUtils.beansOfTypeIncludingAncestors(BeanFactoryUtils.java:378) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:168) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:151) ~[spring-tx-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149) ~[spring-data-jpa-2.2.10.RELEASE.jar:2.2.10.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at com.sun.proxy.$Proxy222.fetchUserCart(Unknown Source) ~[na:na]
	at com.mindtree.order.dao.daoimpl.OrderDaoImpl.getUserCart(OrderDaoImpl.java:25) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:65) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSource' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]: Unsatisfied dependency expressed through method 'dataSource' parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:797) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:538) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 46 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties': Could not bind properties to 'DataSourceProperties' : prefix=spring.datasource, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:110) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:96) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:415) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788) ~[spring-beans-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	... 60 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ff10035 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1093) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.getBeanProvider(AbstractApplicationContext.java:1138) ~[spring-context-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandlerAdvisors(ConfigurationPropertiesBinder.java:147) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:119) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:88) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:107) ~[spring-boot-2.2.10.BUILD-SNAPSHOT.jar:2.2.10.BUILD-SNAPSHOT]
	... 74 common frames omitted
"2020-09-25 19:17:42 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-4, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:17:42 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:17:42 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null) is unavailable or invalid, will attempt rediscovery
""2020-09-25 19:17:42 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:17:42 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 40, CreateTime = 1601039912064, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:17:43 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 41, CreateTime = 1601040574256, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:17:44 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 42, CreateTime = 1601040620825, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:17:44 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 43, CreateTime = 1601040823621, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:17:45 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 44, CreateTime = 1601041585536, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:18:29 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:18:29 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041709810, current=DOWN, previous=UP]
""2020-09-25 19:18:29 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:18:29 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Member consumer-5-9a45360e-d595-4fd2-bb90-c77615d4b592 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:18:29 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-5, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:18:29 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:18:29 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:18:29 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:18:29 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:18:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:18:29 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
""2020-09-25 19:18:29 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
""2020-09-25 19:18:29 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:18:32 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:18:32 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:18:32 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:18:36 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:18:36 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:18:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:18:36 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33ms. Found 3 JPA repository interfaces.
""2020-09-25 19:18:36 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:18:36 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:18:37 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:18:37 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:18:37 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:18:37 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:18:37 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1075 ms
""2020-09-25 19:18:37 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
""2020-09-25 19:18:37 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
""2020-09-25 19:18:37 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:18:37 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:18:37 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:18:37 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:18:37 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:18:37 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:18:37 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:18:38 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:18:38 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:18:38 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:18:38 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:18:38 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:18:39 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:18:39 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:18:39 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:18:39 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:18:39 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:18:39 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:18:39 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:18:39 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601041719274 with initial instances count: 3
""2020-09-25 19:18:39 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041719278, current=UP, previous=STARTING]
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:18:39 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:18:39 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:18:39 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:18:39 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601041719285
""2020-09-25 19:18:39 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-6, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:18:39 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:18:39 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:18:39 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:18:39 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:18:39 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-6, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:18:39 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:18:39 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:18:39 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:18:39 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] (Re-)joining group
""2020-09-25 19:18:39 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] (Re-)joining group
""2020-09-25 19:18:39 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:18:39 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Successfully joined group with generation 121
""2020-09-25 19:18:39 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:18:39 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:18:39 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:18:39 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:18:39 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:18:39 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:18:40 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.295 seconds (JVM running for 1846.523)
""2020-09-25 19:18:40 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:18:48 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:18:48 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:18:49 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:18:50 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 40, CreateTime = 1601039912064, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:18:59 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 19:18:59 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:18:59 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041739463, current=DOWN, previous=UP]
""2020-09-25 19:18:59 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:18:59 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:19:29 INFO  o.s.c.s.DefaultLifecycleProcessor - Failed to shut down 1 bean with phase value 2147483547 within timeout of 30000ms: [org.springframework.kafka.config.internalKafkaListenerEndpointRegistry]
""2020-09-25 19:19:29 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:19:29 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:19:29 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
""2020-09-25 19:19:29 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
""2020-09-25 19:19:29 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:19:32 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:19:32 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:19:32 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:19:32 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 19:19:55 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:19:55 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:19:56 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:19:56 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66ms. Found 3 JPA repository interfaces.
""2020-09-25 19:19:57 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:19:57 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:19:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:19:57 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:19:57 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:19:57 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:19:57 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2194 ms
""2020-09-25 19:19:58 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 19:19:58 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 19:19:59 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:19:59 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:19:59 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:20:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:20:00 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:20:00 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:20:00 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:20:00 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:20:00 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:20:00 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:20:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:20:00 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:20:00 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:20:01 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:20:01 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:20:02 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:20:02 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:20:02 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:20:02 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:20:02 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:20:02 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:20:02 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:20:03 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601041803355 with initial instances count: 2
""2020-09-25 19:20:03 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041803360, current=UP, previous=STARTING]
""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:20:03 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:20:03 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:20:03 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:20:03 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:20:03 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601041803468
""2020-09-25 19:20:03 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:20:03 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:20:03 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:20:03 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:20:03 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:20:03 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:20:03 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:20:03 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:20:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:20:03 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:20:03 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 19:20:03 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 19:20:03 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:20:03 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:20:03 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 123
""2020-09-25 19:20:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:20:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:20:03 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:20:04 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:20:04 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:20:04 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:20:04 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 40, CreateTime = 1601039912064, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:20:04 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 41, CreateTime = 1601040574256, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:20:04 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 42, CreateTime = 1601040620825, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:20:04 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 43, CreateTime = 1601040823621, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:20:04 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 44, CreateTime = 1601041585536, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:20:04 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 12.108 seconds (JVM running for 13.366)
""2020-09-25 19:22:07 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:22:07 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041927322, current=DOWN, previous=UP]
""2020-09-25 19:22:07 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:22:07 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:22:07 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-f0eb6a54-10cb-49a4-ac5b-410bfbde1250 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:22:07 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:22:07 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:22:07 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:22:07 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:22:07 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:22:07 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 19:22:07 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 19:22:07 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:22:10 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:22:10 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:22:10 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:22:13 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:22:13 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:22:13 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:22:13 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27ms. Found 3 JPA repository interfaces.
""2020-09-25 19:22:13 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:22:13 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:22:14 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:22:14 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:22:14 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:22:14 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:22:14 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 845 ms
""2020-09-25 19:22:14 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
""2020-09-25 19:22:14 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
""2020-09-25 19:22:14 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:22:14 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:22:14 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:22:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:22:14 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:22:14 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:22:14 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:22:14 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:22:14 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:22:14 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:22:14 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:22:15 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:22:15 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:22:15 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:22:15 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:22:15 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:22:15 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:22:15 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:22:15 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:22:15 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601041935937 with initial instances count: 3
""2020-09-25 19:22:15 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041935938, current=UP, previous=STARTING]
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:22:15 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:22:15 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:22:15 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:22:15 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601041935945
""2020-09-25 19:22:15 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:22:15 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:22:15 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:22:15 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:22:15 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:22:15 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-2, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:22:15 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:22:15 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:22:15 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:22:15 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 19:22:15 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:22:15 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 19:22:15 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Successfully joined group with generation 125
""2020-09-25 19:22:15 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:22:15 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:22:15 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:22:16 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:22:16 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:22:16 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:22:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 37, CreateTime = 1601039672852, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:22:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 38, CreateTime = 1601039728055, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:22:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 39, CreateTime = 1601039818813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:22:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 40, CreateTime = 1601039912064, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:22:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 41, CreateTime = 1601040574256, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:22:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 42, CreateTime = 1601040620825, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:22:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 43, CreateTime = 1601040823621, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:22:16 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 44, CreateTime = 1601041585536, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":3,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session; nested exception is org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.mindtree.order.entity.Cart.foodList, could not initialize proxy - no Session
	at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:606) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:218) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:162) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.size(PersistentBag.java:371) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at org.hibernate.collection.internal.PersistentBag.addAll(PersistentBag.java:439) ~[hibernate-core-5.4.21.Final.jar:5.4.21.Final]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:95) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:22:16 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.487 seconds (JVM running for 145.443)
""2020-09-25 19:22:16 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:22:56 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:22:56 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041976306, current=DOWN, previous=UP]
""2020-09-25 19:22:56 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:22:56 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Member consumer-2-923c978d-51c3-40a6-a771-985325651f21 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:22:56 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:22:56 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:22:56 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:22:56 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:22:56 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:22:56 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:22:56 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
""2020-09-25 19:22:56 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
""2020-09-25 19:22:56 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:22:59 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:22:59 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:22:59 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:23:04 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:23:04 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:23:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:23:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74ms. Found 3 JPA repository interfaces.
""2020-09-25 19:23:05 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:23:06 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:23:06 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:23:06 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:23:06 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:23:06 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:23:06 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1970 ms
""2020-09-25 19:23:06 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
""2020-09-25 19:23:06 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
""2020-09-25 19:23:07 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:23:07 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:23:07 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:23:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:23:07 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:23:07 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:23:07 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:23:07 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:23:07 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:23:07 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:23:07 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:23:08 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:23:10 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:23:10 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:23:10 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:23:10 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:23:10 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:23:10 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:23:10 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:23:10 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601041990506 with initial instances count: 2
""2020-09-25 19:23:10 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601041990510, current=UP, previous=STARTING]
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:23:10 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:23:10 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:23:10 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:23:10 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601041990522
""2020-09-25 19:23:10 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:23:10 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:23:10 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:23:10 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:23:10 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:23:10 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-3, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:23:10 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:23:10 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:23:10 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:23:10 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 19:23:10 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 19:23:10 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:23:10 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Successfully joined group with generation 127
""2020-09-25 19:23:10 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:23:10 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:23:10 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:23:10 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:23:10 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:23:10 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:23:10 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:23:11 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:23:11 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 19:23:11 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 19:23:11 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:23:11 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7cda4f3b
""2020-09-25 19:23:11 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:23:11 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:23:11 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:23:11 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:23:11 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:23:11 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:23:11 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:23:11 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:23:11 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 11.561 seconds (JVM running for 200.749)
""2020-09-25 19:23:11 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:23:12 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:24:02 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:24:38 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:26:08 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:26:08 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042168554, current=DOWN, previous=UP]
""2020-09-25 19:26:08 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:26:08 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Member consumer-3-b8d5965e-caa5-444a-9695-96cfa9ab5ceb sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:26:08 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:26:08 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:26:08 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:26:08 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:26:08 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:26:08 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:26:08 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:26:08 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
""2020-09-25 19:26:08 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
""2020-09-25 19:26:08 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:26:11 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:26:11 WARN  c.n.d.TimedSupervisorTask - task supervisor shutting down, can't accept the task
""2020-09-25 19:26:11 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:26:11 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:26:14 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:26:14 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:26:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:26:15 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 3 JPA repository interfaces.
""2020-09-25 19:26:15 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:26:15 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:26:15 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:26:15 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:26:15 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:26:15 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:26:15 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 867 ms
""2020-09-25 19:26:15 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
""2020-09-25 19:26:15 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
""2020-09-25 19:26:15 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:26:15 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:26:15 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:26:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:26:16 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:26:16 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:26:16 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:26:16 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:26:16 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:26:16 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:26:16 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:26:16 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:26:17 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:26:17 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:26:17 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:26:17 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:26:17 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:26:17 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:26:17 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:26:17 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601042177324 with initial instances count: 3
""2020-09-25 19:26:17 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042177326, current=UP, previous=STARTING]
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:26:17 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:26:17 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:26:17 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:26:17 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601042177332
""2020-09-25 19:26:17 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-4, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:26:17 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:26:17 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:26:17 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:26:17 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:26:17 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-4, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:26:17 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:26:17 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:26:17 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:26:17 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] (Re-)joining group
""2020-09-25 19:26:17 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] (Re-)joining group
""2020-09-25 19:26:17 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:26:17 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Successfully joined group with generation 129
""2020-09-25 19:26:17 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:26:17 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=47, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:26:17 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:26:17 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:26:17 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:26:17 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:26:18 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.157 seconds (JVM running for 387.378)
""2020-09-25 19:26:18 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:26:27 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:26:27 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:26:27 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 19:26:27 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 19:26:27 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:26:27 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@55168914
""2020-09-25 19:26:27 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:26:28 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:26:50 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:26:50 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042210708, current=DOWN, previous=UP]
""2020-09-25 19:26:50 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:26:50 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Member consumer-4-c4aa2adb-d3ca-4044-b183-4ec915125c3e sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:26:50 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-4, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:26:50 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:26:50 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:26:50 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:26:50 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:26:50 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:26:50 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:26:50 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
""2020-09-25 19:26:50 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
""2020-09-25 19:26:50 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:26:53 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:26:53 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:26:53 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:26:56 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:26:56 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:26:57 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:26:57 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25ms. Found 3 JPA repository interfaces.
""2020-09-25 19:26:57 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:26:57 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:26:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:26:57 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:26:57 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:26:57 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:26:57 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 879 ms
""2020-09-25 19:26:57 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
""2020-09-25 19:26:57 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
""2020-09-25 19:26:57 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:26:58 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:26:58 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:26:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:26:58 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:26:58 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:26:58 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:26:58 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:26:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:26:58 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:26:58 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:26:58 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:26:59 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:26:59 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:26:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:26:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:26:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:26:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:26:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:26:59 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601042219449 with initial instances count: 3
""2020-09-25 19:26:59 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042219451, current=UP, previous=STARTING]
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:26:59 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:26:59 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:26:59 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:26:59 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601042219456
""2020-09-25 19:26:59 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-5, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:26:59 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:26:59 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:26:59 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:26:59 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:26:59 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-5, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:26:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:26:59 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:26:59 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:26:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] (Re-)joining group
""2020-09-25 19:26:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] (Re-)joining group
""2020-09-25 19:26:59 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:26:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Successfully joined group with generation 131
""2020-09-25 19:26:59 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:26:59 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=48, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:26:59 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:26:59 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:26:59 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:26:59 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:27:00 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.489 seconds (JVM running for 428.942)
""2020-09-25 19:27:00 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:27:08 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1601042228813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with orfer for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with orfer for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with orfer for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:29:13 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:29:13 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042353481, current=DOWN, previous=UP]
""2020-09-25 19:29:13 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:29:13 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-5, groupId=group_id] Member consumer-5-7765b9c3-b583-4ec7-a0d2-80bbf083b773 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:29:13 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-5, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:29:13 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:29:13 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:29:13 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:29:13 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:29:13 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:29:13 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
""2020-09-25 19:29:13 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
""2020-09-25 19:29:13 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:29:16 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:29:16 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:29:16 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:29:19 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:29:19 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:29:19 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:29:19 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 3 JPA repository interfaces.
""2020-09-25 19:29:20 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:29:20 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:29:20 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:29:20 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:29:20 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:29:20 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:29:20 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 867 ms
""2020-09-25 19:29:20 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-6 - Starting...
""2020-09-25 19:29:20 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-6 - Start completed.
""2020-09-25 19:29:20 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:29:20 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:29:20 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:29:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:29:20 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:29:20 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:29:20 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:29:20 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:29:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:29:20 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:29:20 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:29:21 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:29:21 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:29:22 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:29:22 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:29:22 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:29:22 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:29:22 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:29:22 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:29:22 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601042362081 with initial instances count: 3
""2020-09-25 19:29:22 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042362083, current=UP, previous=STARTING]
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:29:22 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:29:22 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:29:22 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:29:22 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601042362088
""2020-09-25 19:29:22 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-6, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:29:22 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:29:22 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:29:22 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:29:22 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:29:22 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-6, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:29:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:29:22 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:29:22 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:29:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] (Re-)joining group
""2020-09-25 19:29:22 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:29:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] (Re-)joining group
""2020-09-25 19:29:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Successfully joined group with generation 133
""2020-09-25 19:29:22 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:29:22 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=48, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:29:22 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:29:22 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:29:22 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:29:22 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:29:22 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1601042228813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with orfer for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with orfer for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with orfer for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:29:22 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.535 seconds (JVM running for 571.599)
""2020-09-25 19:29:22 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:29:52 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:29:52 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042392384, current=DOWN, previous=UP]
""2020-09-25 19:29:52 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:29:52 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-6, groupId=group_id] Member consumer-6-dcc99e31-3b16-446c-916c-9b018f5259d0 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:29:52 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-6, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:29:52 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:29:52 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:29:52 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:29:52 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:29:52 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:29:52 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown initiated...
""2020-09-25 19:29:52 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-6 - Shutdown completed.
""2020-09-25 19:29:52 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:29:55 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:29:55 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:29:55 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:29:58 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:29:58 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:29:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:29:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29ms. Found 3 JPA repository interfaces.
""2020-09-25 19:29:59 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:29:59 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:29:59 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:29:59 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:29:59 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:29:59 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:29:59 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 980 ms
""2020-09-25 19:29:59 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-7 - Starting...
""2020-09-25 19:29:59 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-7 - Start completed.
""2020-09-25 19:29:59 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:29:59 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:30:00 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:30:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:30:00 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:30:00 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:30:00 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:30:00 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:30:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:30:00 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:30:00 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:30:00 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:30:01 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:30:01 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:30:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:30:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:30:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:30:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:30:01 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:30:01 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601042401460 with initial instances count: 2
""2020-09-25 19:30:01 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042401462, current=UP, previous=STARTING]
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:30:01 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:30:01 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:30:01 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:30:01 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601042401467
""2020-09-25 19:30:01 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-7, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:30:01 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:30:01 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:30:01 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:30:01 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:30:01 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-7, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:30:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-7, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:30:01 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-7, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:30:01 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:30:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-7, groupId=group_id] (Re-)joining group
""2020-09-25 19:30:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-7, groupId=group_id] (Re-)joining group
""2020-09-25 19:30:01 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:30:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-7, groupId=group_id] Successfully joined group with generation 135
""2020-09-25 19:30:01 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-7, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:30:01 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-7, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=48, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:30:01 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:30:01 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:30:01 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:30:01 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:30:01 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1601042228813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:30:02 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.964 seconds (JVM running for 610.997)
""2020-09-25 19:30:02 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:30:23 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 49, CreateTime = 1601042423617, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws com.mindtree.order.exception.OrderServiceAppException' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:31:20 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:31:20 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042480104, current=DOWN, previous=UP]
""2020-09-25 19:31:20 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:31:20 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-7, groupId=group_id] Member consumer-7-82184aac-8511-4b6a-a376-d4e0195201df sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:31:20 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-7, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:31:20 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:31:20 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:31:20 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:31:20 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:31:20 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:31:20 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown initiated...
""2020-09-25 19:31:20 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-7 - Shutdown completed.
""2020-09-25 19:31:20 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:31:23 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:31:23 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:31:23 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:31:26 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:31:26 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:31:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:31:27 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50ms. Found 3 JPA repository interfaces.
""2020-09-25 19:31:27 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:31:27 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:31:27 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:31:27 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:31:27 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:31:27 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:31:27 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1068 ms
""2020-09-25 19:31:27 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-8 - Starting...
""2020-09-25 19:31:27 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-8 - Start completed.
""2020-09-25 19:31:27 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:31:27 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:31:27 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:31:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:31:28 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:31:28 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:31:28 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:31:28 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:31:28 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:31:28 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:31:28 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:31:28 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:31:29 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:31:29 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:31:29 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:31:29 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:31:29 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:31:29 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:31:29 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:31:29 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601042489273 with initial instances count: 3
""2020-09-25 19:31:29 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042489275, current=UP, previous=STARTING]
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:31:29 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:31:29 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:31:29 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:31:29 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601042489282
""2020-09-25 19:31:29 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-8, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:31:29 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:31:29 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:31:29 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:31:29 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:31:29 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-8, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:31:29 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-8, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:31:29 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-8, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:31:29 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:31:29 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-8, groupId=group_id] (Re-)joining group
""2020-09-25 19:31:29 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:31:29 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-8, groupId=group_id] (Re-)joining group
""2020-09-25 19:31:29 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-8, groupId=group_id] Successfully joined group with generation 137
""2020-09-25 19:31:29 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-8, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:31:29 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-8, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=48, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:31:29 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:31:29 ERROR o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - Stopping container due to an Error
"java.lang.Error: Unresolved compilation problem: 
	Unhandled exception type Exception

	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
"2020-09-25 19:31:29 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-8, groupId=group_id] Member consumer-8-0b14984f-6444-4f03-972c-cb366078fa6a sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:31:29 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-8, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:31:29 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:31:29 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:31:29 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:31:29 ERROR o.s.k.l.KafkaMessageListenerContainer - Error while stopping the container: 
"java.lang.Error: Unresolved compilation problem: 
	Unhandled exception type Exception

	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ~[na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
"2020-09-25 19:31:29 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:31:29 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:31:30 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.192 seconds (JVM running for 698.99)
""2020-09-25 19:31:30 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:31:30 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:31:30 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042490740, current=DOWN, previous=UP]
""2020-09-25 19:31:30 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:31:30 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:31:30 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:31:30 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown initiated...
""2020-09-25 19:31:30 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:31:30 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-8 - Shutdown completed.
""2020-09-25 19:31:30 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:31:33 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:31:33 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:31:33 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:31:37 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:31:37 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:31:37 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:31:37 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28ms. Found 3 JPA repository interfaces.
""2020-09-25 19:31:38 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:31:38 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:31:38 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:31:38 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:31:38 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:31:38 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:31:38 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1122 ms
""2020-09-25 19:31:38 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-9 - Starting...
""2020-09-25 19:31:38 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-9 - Start completed.
""2020-09-25 19:31:38 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:31:38 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:31:38 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:31:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:31:39 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:31:39 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:31:39 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:31:39 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:31:39 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:31:39 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:31:39 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:31:39 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:31:40 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:31:40 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:31:40 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:31:40 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:31:40 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:31:40 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:31:40 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:31:40 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601042500413 with initial instances count: 3
""2020-09-25 19:31:40 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042500415, current=UP, previous=STARTING]
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:31:40 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:31:40 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:31:40 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:31:40 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601042500424
""2020-09-25 19:31:40 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-9, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:31:40 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:31:40 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:31:40 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:31:40 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:31:40 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-9, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:31:40 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-9, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:31:40 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-9, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:31:40 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:31:40 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-9, groupId=group_id] (Re-)joining group
""2020-09-25 19:31:40 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:31:40 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-9, groupId=group_id] (Re-)joining group
""2020-09-25 19:31:40 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-9, groupId=group_id] Successfully joined group with generation 139
""2020-09-25 19:31:40 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-9, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:31:40 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-9, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=48, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:31:40 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:31:40 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:31:40 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:31:40 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:31:40 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1601042228813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:31:40 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 49, CreateTime = 1601042423617, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:31:41 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 6.418 seconds (JVM running for 710.066)
""2020-09-25 19:31:41 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:31:44 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:31:44 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042504849, current=DOWN, previous=UP]
""2020-09-25 19:31:44 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:31:44 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-9, groupId=group_id] Member consumer-9-95eab851-6044-49e8-abbb-99418373ad2f sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:31:44 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-9, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:31:44 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:31:44 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:31:44 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:31:44 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:31:44 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:31:44 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown initiated...
""2020-09-25 19:31:44 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-9 - Shutdown completed.
""2020-09-25 19:31:44 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:31:47 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:31:47 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:31:47 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:31:50 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:31:50 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:31:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:31:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 3 JPA repository interfaces.
""2020-09-25 19:31:51 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:31:51 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:31:51 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:31:51 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:31:51 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:31:51 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:31:51 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 747 ms
""2020-09-25 19:31:51 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-10 - Starting...
""2020-09-25 19:31:51 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-10 - Start completed.
""2020-09-25 19:31:51 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:31:51 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:31:51 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:31:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:31:52 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:31:52 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:31:52 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:31:52 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:31:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:31:52 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:31:52 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:31:52 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:31:53 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:31:53 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:31:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:31:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:31:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:31:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:31:53 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:31:53 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601042513219 with initial instances count: 3
""2020-09-25 19:31:53 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042513220, current=UP, previous=STARTING]
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:31:53 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:31:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:31:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:31:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601042513225
""2020-09-25 19:31:53 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-10, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:31:53 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:31:53 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:31:53 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:31:53 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:31:53 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-10, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:31:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-10, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:31:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-10, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:31:53 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:31:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-10, groupId=group_id] (Re-)joining group
""2020-09-25 19:31:53 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:31:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-10, groupId=group_id] (Re-)joining group
""2020-09-25 19:31:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-10, groupId=group_id] Successfully joined group with generation 141
""2020-09-25 19:31:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-10, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:31:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-10, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=48, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:31:53 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:31:53 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:31:53 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:31:53 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:31:53 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1601042228813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:31:53 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 49, CreateTime = 1601042423617, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:31:53 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.225 seconds (JVM running for 722.725)
""2020-09-25 19:31:53 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:32:02 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 50, CreateTime = 1601042522011, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:34:44 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:34:44 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042684688, current=DOWN, previous=UP]
""2020-09-25 19:34:44 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:34:44 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:34:44 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-10, groupId=group_id] Member consumer-10-3a83b58e-213a-46f9-8408-66d462947e64 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:34:44 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-10, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:34:44 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:34:44 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:34:44 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:34:44 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:34:44 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown initiated...
""2020-09-25 19:34:44 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-10 - Shutdown completed.
""2020-09-25 19:34:44 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:34:47 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:34:47 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:34:47 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:34:50 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:34:50 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:34:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:34:51 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22ms. Found 3 JPA repository interfaces.
""2020-09-25 19:34:51 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:34:51 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:34:51 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:34:51 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:34:51 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:34:51 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:34:51 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 827 ms
""2020-09-25 19:34:51 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-11 - Starting...
""2020-09-25 19:34:51 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-11 - Start completed.
""2020-09-25 19:34:51 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:34:51 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:34:52 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:34:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:34:52 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:34:52 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:34:52 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:34:52 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:34:52 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:34:52 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:34:52 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:34:52 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:34:53 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:34:53 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:34:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:34:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:34:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:34:53 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:34:53 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:34:53 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601042693364 with initial instances count: 3
""2020-09-25 19:34:53 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042693366, current=UP, previous=STARTING]
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:34:53 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:34:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:34:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:34:53 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601042693374
""2020-09-25 19:34:53 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-11, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:34:53 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:34:53 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:34:53 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:34:53 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:34:53 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-11, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:34:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-11, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:34:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-11, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:34:53 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:34:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-11, groupId=group_id] (Re-)joining group
""2020-09-25 19:34:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-11, groupId=group_id] (Re-)joining group
""2020-09-25 19:34:53 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:34:53 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-11, groupId=group_id] Successfully joined group with generation 143
""2020-09-25 19:34:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-11, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:34:53 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-11, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=48, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:34:53 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:34:53 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:34:53 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:34:53 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:34:53 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1601042228813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:34:53 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 49, CreateTime = 1601042423617, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:34:53 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 50, CreateTime = 1601042522011, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:34:53 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.356 seconds (JVM running for 902.819)
""2020-09-25 19:34:53 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:37:01 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 19:37:01 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:37:01 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601042821031, current=DOWN, previous=UP]
""2020-09-25 19:37:01 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:37:01 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-11, groupId=group_id] Member consumer-11-14c78c7e-51bd-4c49-a614-95fc59b63b6d sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:37:01 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-11, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:37:01 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:37:01 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:37:01 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:37:01 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:37:01 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:37:01 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown initiated...
""2020-09-25 19:37:01 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-11 - Shutdown completed.
""2020-09-25 19:37:01 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:37:04 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:37:04 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:37:04 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:37:04 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 19:37:04 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 19:50:04 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:50:04 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:50:05 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:50:06 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 135ms. Found 3 JPA repository interfaces.
""2020-09-25 19:50:06 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:50:06 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:50:07 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:50:07 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:50:07 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:50:07 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:50:07 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2877 ms
""2020-09-25 19:50:08 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 19:50:08 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 19:50:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:50:09 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:50:10 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:50:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:50:10 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:50:10 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:50:10 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:50:10 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:50:10 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:50:11 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:50:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:50:11 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:50:11 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:50:12 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:50:12 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:50:12 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:50:12 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:50:13 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:50:13 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:50:13 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:50:13 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:50:13 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:50:14 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601043614335 with initial instances count: 0
""2020-09-25 19:50:14 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601043614339, current=UP, previous=STARTING]
""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:50:14 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:50:14 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:50:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:50:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:50:14 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601043614447
""2020-09-25 19:50:14 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:50:14 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:50:14 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:50:14 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:50:14 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:50:14 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:50:14 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:50:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:50:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:50:14 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:50:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 19:50:14 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:50:14 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:50:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 19:50:14 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 145
""2020-09-25 19:50:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:50:14 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=48, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:50:14 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:50:14 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 48, CreateTime = 1601042228813, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":6,"quantity":2}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:50:14 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 49, CreateTime = 1601042423617, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:50:14 ERROR o.s.k.l.LoggingErrorHandler - Error while processing: ConsumerRecord(topic = addToCart, partition = 0, leaderEpoch = 0, offset = 50, CreateTime = 1601042522011, serialized key size = -1, serialized value size = 90, headers = RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [99, 111, 109, 46, 109, 105, 110, 100, 116, 114, 101, 101, 46, 117, 115, 101, 114, 46, 100, 116, 111, 46, 67, 97, 114, 116, 68, 116, 111])], isReadOnly = false), key = null, value = {"userId":"104885148526304774223","restaurantId":1,"foodList":[{"foodId":1,"quantity":1}]})
"org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(java.lang.String) throws java.lang.Exception' threw exception; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!; nested exception is com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:1879) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:1871) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1783) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:1708) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:1611) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:1350) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1081) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:992) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [na:1.8.0_241]
	at java.util.concurrent.FutureTask.run(Unknown Source) [na:1.8.0_241]
	at java.lang.Thread.run(Unknown Source) [na:1.8.0_241]
Caused by: com.mindtree.order.exception.RestaurantMismatchException: Cannot add from diifrent restaurants at a time.... Please proceed with order for old cart then try..!
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCart(OrderServiceImpl.java:92) ~[classes/:na]
	at com.mindtree.order.serviceimpl.OrderServiceImpl.addToCartFromKafka(OrderServiceImpl.java:58) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Unknown Source) ~[na:1.8.0_241]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120) ~[spring-messaging-5.2.9.RELEASE.jar:5.2.9.RELEASE]
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:48) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:326) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:86) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:51) ~[spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:1833) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:1815) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:1770) [spring-kafka-2.3.11.RELEASE.jar:2.3.11.RELEASE]
	... 8 common frames omitted
"2020-09-25 19:50:15 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 14.918 seconds (JVM running for 16.521)
""2020-09-25 19:50:44 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:50:44 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:50:44 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:50:44 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:50:44 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:50:44 INFO  c.n.discovery.DiscoveryClient - Application version is -1: false
""2020-09-25 19:50:44 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:50:44 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:50:58 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2020-09-25 19:50:58 INFO  o.s.w.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2020-09-25 19:50:58 DEBUG o.s.w.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2020-09-25 19:50:58 DEBUG o.s.w.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2020-09-25 19:50:58 INFO  o.s.w.servlet.DispatcherServlet - Completed initialization in 14 ms
""2020-09-25 19:50:58 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPaynow/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:50:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(PaymentDto, String, String, String)
""2020-09-25 19:50:58 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.mindtree.order.dto.PaymentDto@240dadcd]
""2020-09-25 19:50:59 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:50:59 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:50:59 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 19:50:59 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 19:50:59 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:50:59 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@53de424f
""2020-09-25 19:50:59 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 19:51:00 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:51:02 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:51:02 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@52c1ea54]
""2020-09-25 19:51:02 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 19:51:05 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPaynow/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:51:05 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(PaymentDto, String, String, String)
""2020-09-25 19:51:05 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.mindtree.order.dto.PaymentDto@41d49f6a]
""2020-09-25 19:51:05 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:51:05 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:51:05 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:51:05 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:51:05 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:51:18 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPaynow/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:51:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(PaymentDto, String, String, String)
""2020-09-25 19:51:18 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.mindtree.order.dto.PaymentDto@6564456b]
""2020-09-25 19:51:18 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:51:18 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:51:18 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:51:18 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:51:18 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:51:23 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:51:23 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 19:51:23 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:51:23 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:51:23 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:51:23 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:51:23 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:52:37 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:53:01 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:53:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 19:53:01 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 19:53:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:53:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@736a8fdf]
""2020-09-25 19:53:03 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 19:53:11 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:53:11 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 19:53:11 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:53:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:53:11 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:53:11 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:53:11 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:53:17 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:53:17 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 19:53:17 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:53:17 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:53:17 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:53:17 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:53:17 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:53:18 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:53:18 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 19:53:18 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:53:18 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:53:18 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:53:18 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:53:18 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:53:26 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPaynow/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:53:26 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(PaymentDto, String, String, String)
""2020-09-25 19:53:26 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.mindtree.order.dto.PaymentDto@6379f51b]
""2020-09-25 19:53:26 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:53:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:53:26 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:53:26 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:53:26 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:53:27 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPaynow/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:53:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(PaymentDto, String, String, String)
""2020-09-25 19:53:27 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.mindtree.order.dto.PaymentDto@381b2b66]
""2020-09-25 19:53:27 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:53:27 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:53:27 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:53:27 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:53:27 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:53:29 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPaynow/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:53:29 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(PaymentDto, String, String, String)
""2020-09-25 19:53:29 DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [com.mindtree.order.dto.PaymentDto@649bf5bc]
""2020-09-25 19:53:29 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 19:53:29 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:53:29 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 19:53:29 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 19:53:29 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 19:53:50 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:53:50 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601043830066, current=DOWN, previous=UP]
""2020-09-25 19:53:50 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:53:50 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:53:50 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-5bc907e7-61c3-4fb9-bcf1-87ff1892e0a0 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:53:50 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:53:50 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:53:50 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:53:50 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:53:50 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:53:50 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:53:50 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 19:53:50 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 19:53:50 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:53:53 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:53:53 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:53:53 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:53:58 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:53:58 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:53:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:53:59 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68ms. Found 3 JPA repository interfaces.
""2020-09-25 19:53:59 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:53:59 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:54:00 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:54:00 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:54:00 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:54:00 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:54:00 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1658 ms
""2020-09-25 19:54:00 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
""2020-09-25 19:54:00 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
""2020-09-25 19:54:00 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:54:00 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:54:00 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:54:00 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:54:00 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:54:00 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:54:00 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:54:01 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:54:01 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:54:01 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:54:01 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:54:02 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:54:02 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:54:03 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:54:03 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:54:03 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:54:03 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:54:03 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:54:03 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:54:03 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601043843211 with initial instances count: 2
""2020-09-25 19:54:03 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601043843216, current=UP, previous=STARTING]
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:54:03 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:54:03 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:54:03 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:54:03 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601043843245
""2020-09-25 19:54:03 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:54:03 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:54:03 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:54:03 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:54:03 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:54:03 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-2, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:54:03 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:54:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:54:03 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:54:03 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 19:54:03 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:54:03 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] (Re-)joining group
""2020-09-25 19:54:03 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Successfully joined group with generation 147
""2020-09-25 19:54:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:54:03 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=52, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:54:03 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:54:03 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:54:03 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:54:03 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:54:04 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 9.73 seconds (JVM running for 245.354)
""2020-09-25 19:54:04 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:54:15 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:54:15 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:54:15 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 19:54:15 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 19:54:15 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:54:15 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@70ee90fd
""2020-09-25 19:54:15 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:54:16 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:54:25 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2020-09-25 19:54:25 INFO  o.s.w.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2020-09-25 19:54:25 DEBUG o.s.w.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2020-09-25 19:54:25 DEBUG o.s.w.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2020-09-25 19:54:25 INFO  o.s.w.servlet.DispatcherServlet - Completed initialization in 3 ms
""2020-09-25 19:54:25 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:54:25 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 19:54:25 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 19:54:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:54:25 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@242044d4]
""2020-09-25 19:54:25 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 19:54:51 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 19:54:51 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601043891110, current=DOWN, previous=UP]
""2020-09-25 19:54:51 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:54:51 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-2, groupId=group_id] Member consumer-2-0ce55929-3846-4c3b-a20a-665b41de9710 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:54:51 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-2, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 19:54:51 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 19:54:51 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:54:51 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 19:54:51 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:54:51 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:54:51 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:54:51 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
""2020-09-25 19:54:51 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
""2020-09-25 19:54:51 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 19:54:54 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 19:54:54 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 19:54:54 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 19:54:57 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 19:54:57 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 19:54:57 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 19:54:57 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31ms. Found 3 JPA repository interfaces.
""2020-09-25 19:54:57 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 19:54:57 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 19:54:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 19:54:57 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 19:54:57 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 19:54:58 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 19:54:58 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 811 ms
""2020-09-25 19:54:58 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
""2020-09-25 19:54:58 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
""2020-09-25 19:54:58 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 19:54:58 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 19:54:58 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 19:54:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 19:54:58 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 19:54:58 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 19:54:58 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 19:54:58 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 19:54:58 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 19:54:58 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 19:54:58 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 19:54:59 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 19:54:59 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 19:54:59 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 19:54:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 19:54:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 19:54:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 19:54:59 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 19:54:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 19:54:59 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601043899526 with initial instances count: 3
""2020-09-25 19:54:59 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601043899528, current=UP, previous=STARTING]
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 19:54:59 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 19:54:59 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 19:54:59 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 19:54:59 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601043899535
""2020-09-25 19:54:59 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 19:54:59 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 19:54:59 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 19:54:59 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 19:54:59 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 19:54:59 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-3, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 19:54:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 19:54:59 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 19:54:59 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 19:54:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 19:54:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] (Re-)joining group
""2020-09-25 19:54:59 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 19:54:59 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Successfully joined group with generation 149
""2020-09-25 19:54:59 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 19:54:59 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=53, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 19:54:59 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 19:54:59 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 19:54:59 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 19:54:59 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 19:55:00 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.315 seconds (JVM running for 301.415)
""2020-09-25 19:55:00 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 19:55:13 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:55:13 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 19:55:13 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 19:55:13 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 19:55:13 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:55:13 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3f246fbb
""2020-09-25 19:55:13 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 19:55:14 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 19:55:27 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2020-09-25 19:55:27 INFO  o.s.w.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2020-09-25 19:55:27 DEBUG o.s.w.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2020-09-25 19:55:27 DEBUG o.s.w.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2020-09-25 19:55:27 INFO  o.s.w.servlet.DispatcherServlet - Completed initialization in 7 ms
""2020-09-25 19:55:27 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 19:55:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 19:55:27 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 19:55:28 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 19:55:28 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@1d561405]
""2020-09-25 19:55:28 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 19:59:59 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 20:04:02 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 20:04:02 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601044442253, current=DOWN, previous=UP]
""2020-09-25 20:04:02 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 20:04:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-3, groupId=group_id] Member consumer-3-0a00d793-4fec-42b2-8030-efc96f58e99a sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 20:04:02 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-3, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 20:04:02 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 20:04:02 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 20:04:02 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 20:04:02 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 20:04:02 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 20:04:02 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 20:04:02 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
""2020-09-25 20:04:02 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
""2020-09-25 20:04:02 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 20:04:05 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 20:04:05 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 20:04:05 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 20:04:08 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 20:04:08 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 20:04:09 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 20:04:09 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31ms. Found 3 JPA repository interfaces.
""2020-09-25 20:04:09 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 20:04:09 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 20:04:09 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 20:04:09 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 20:04:09 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 20:04:09 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 20:04:09 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 885 ms
""2020-09-25 20:04:09 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
""2020-09-25 20:04:09 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
""2020-09-25 20:04:09 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 20:04:09 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 20:04:10 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 20:04:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 20:04:10 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 20:04:10 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 20:04:10 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 20:04:10 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 20:04:10 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 20:04:10 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 20:04:10 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 20:04:10 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 20:04:11 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 20:04:11 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 20:04:11 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 20:04:11 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 20:04:11 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 20:04:11 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 20:04:11 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 20:04:11 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601044451296 with initial instances count: 3
""2020-09-25 20:04:11 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601044451298, current=UP, previous=STARTING]
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 20:04:11 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 20:04:11 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 20:04:11 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 20:04:11 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601044451303
""2020-09-25 20:04:11 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-4, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 20:04:11 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 20:04:11 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 20:04:11 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 20:04:11 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 20:04:11 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-4, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 20:04:11 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 20:04:11 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 20:04:11 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 20:04:11 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] (Re-)joining group
""2020-09-25 20:04:11 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 20:04:11 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] (Re-)joining group
""2020-09-25 20:04:11 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Successfully joined group with generation 151
""2020-09-25 20:04:11 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 20:04:11 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=54, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 20:04:11 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 20:04:11 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 20:04:11 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 20:04:11 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 20:04:11 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 5.799 seconds (JVM running for 853.093)
""2020-09-25 20:04:11 INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
""2020-09-25 20:05:34 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
""2020-09-25 20:05:34 INFO  o.s.w.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
""2020-09-25 20:05:34 DEBUG o.s.w.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
""2020-09-25 20:05:34 DEBUG o.s.w.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
""2020-09-25 20:05:34 INFO  o.s.w.servlet.DispatcherServlet - Completed initialization in 5 ms
""2020-09-25 20:05:34 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 20:05:34 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 20:05:34 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 20:05:34 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 20:05:34 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 20:05:34 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 20:05:34 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 20:05:39 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 20:05:39 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 20:05:39 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 20:05:39 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 20:05:39 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 20:05:39 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4f5b1f88
""2020-09-25 20:05:39 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 20:05:40 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 20:06:19 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 20:06:19 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 20:06:19 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 20:06:19 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 20:06:19 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@2dd75493]
""2020-09-25 20:06:19 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 20:07:27 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 20:07:27 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 20:07:27 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 20:07:27 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 20:07:27 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 20:07:27 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 20:07:27 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 20:09:11 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 20:10:37 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 20:11:20 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 20:11:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 20:11:20 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 20:11:20 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 20:11:20 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@7eded34f]
""2020-09-25 20:11:20 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 20:11:20 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 20:11:20 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 20:11:20 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 20:11:20 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 20:11:20 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 20:11:20 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 20:11:20 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 20:11:44 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 20:11:44 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 20:11:44 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 20:11:44 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 20:11:44 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 20:11:44 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 20:11:44 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 20:11:52 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 20:12:03 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 20:12:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 20:12:03 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [com.mindtree.order.dto.ResturantDetailsDto]
""2020-09-25 20:12:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 20:12:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [com.mindtree.order.entity.Order@12ac7b64]
""2020-09-25 20:12:03 DEBUG o.s.w.servlet.DispatcherServlet - Completed 200 OK
""2020-09-25 20:12:03 DEBUG o.s.w.servlet.DispatcherServlet - POST "/api/v1/order/confirmOrderPayLater/104885148526304774223/Nithin/9113683980", parameters={}
""2020-09-25 20:12:03 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.mindtree.order.controller.OrderController#confirmOrderPaynow(String, String, String)
""2020-09-25 20:12:03 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.mindtree.order.exception.handler.SearchControllerExceptionHandler#searchControllerExceptionHandler(Exception, Throwable)
""2020-09-25 20:12:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
""2020-09-25 20:12:03 DEBUG o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [{Message=Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!, Error=tr (truncated)...]
""2020-09-25 20:12:03 WARN  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.mindtree.order.exception.UserCartNoFoundException: Cart Is Empty Cannot process Order Please Add food to cart then confirm order...!]
""2020-09-25 20:12:03 DEBUG o.s.w.servlet.DispatcherServlet - Completed 404 NOT_FOUND
""2020-09-25 20:13:16 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 20:13:16 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 20:13:16 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601044996892, current=DOWN, previous=UP]
""2020-09-25 20:13:16 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 20:13:16 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-4, groupId=group_id] Member consumer-4-8927f2d0-ce5d-48ab-90ac-5ce315c3f8a7 sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 20:13:16 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-4, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 20:13:16 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 20:13:16 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 20:13:16 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 20:13:16 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 20:13:16 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 20:13:16 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 20:13:16 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
""2020-09-25 20:13:16 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
""2020-09-25 20:13:16 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 20:13:19 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 20:13:19 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 20:13:19 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 20:13:20 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 20:13:20 INFO  o.a.c.c.C.[.[localhost].[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
""2020-09-25 20:13:20 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
""2020-09-25 21:05:56 ERROR o.s.c.logging.LoggingRebinder - Cannot set level: = DEBUG for 'com.mindtree'
""2020-09-25 21:05:56 INFO  c.m.o.OrderServiceApplication - The following profiles are active: dev
""2020-09-25 21:05:57 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
""2020-09-25 21:05:57 INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59ms. Found 3 JPA repository interfaces.
""2020-09-25 21:05:57 INFO  o.s.c.context.scope.GenericScope - BeanFactory id=954a3d38-f70b-36b1-bb93-59b719c8de49
""2020-09-25 21:05:57 INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.mindtree.order.proxy.SearchProxy' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
""2020-09-25 21:05:57 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8084 (http)
""2020-09-25 21:05:57 INFO  o.a.c.core.StandardService - Starting service [Tomcat]
""2020-09-25 21:05:57 INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.38]
""2020-09-25 21:05:57 INFO  o.a.c.c.C.[.[localhost].[/] - Initializing Spring embedded WebApplicationContext
""2020-09-25 21:05:57 INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1642 ms
""2020-09-25 21:05:58 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
""2020-09-25 21:05:58 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
""2020-09-25 21:05:58 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 21:05:58 WARN  o.s.b.d.a.OptionalLiveReloadServer - Unable to start LiveReload server
""2020-09-25 21:05:59 WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
""2020-09-25 21:05:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 8 mappings in 'requestMappingHandlerMapping'
""2020-09-25 21:05:59 INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
""2020-09-25 21:05:59 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 21:05:59 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 21:05:59 WARN  c.n.c.s.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
""2020-09-25 21:05:59 INFO  c.n.c.s.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
""2020-09-25 21:05:59 INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
""2020-09-25 21:05:59 DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
""2020-09-25 21:05:59 DEBUG o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**] in 'resourceHandlerMapping'
""2020-09-25 21:05:59 DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
""2020-09-25 21:06:00 INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses Jersey
""2020-09-25 21:06:00 WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
""2020-09-25 21:06:01 INFO  o.s.c.n.e.InstanceInfoFactory - Setting initial instance status as: STARTING
""2020-09-25 21:06:01 INFO  c.n.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
""2020-09-25 21:06:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
""2020-09-25 21:06:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
""2020-09-25 21:06:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
""2020-09-25 21:06:01 INFO  c.n.d.p.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
""2020-09-25 21:06:01 INFO  c.n.d.s.r.a.ConfigClusterResolver - Resolving eureka endpoints via configuration
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Disable delta property : false
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Single vip registry refresh property : null
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Force full registry fetch : false
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Application is null : false
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Registered Applications size is zero : true
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Application version is -1: true
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - The response status is 200
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
""2020-09-25 21:06:02 INFO  c.n.d.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1601048162219 with initial instances count: 2
""2020-09-25 21:06:02 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Registering application ORDERSERVICE with eureka with status UP
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601048162222, current=UP, previous=STARTING]
""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 21:06:02 INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = default
	client.id = 
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = group_id
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

""2020-09-25 21:06:02 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 21:06:02 INFO  o.a.k.common.utils.AppInfoParser - Kafka version: 2.3.1
""2020-09-25 21:06:02 INFO  o.a.k.common.utils.AppInfoParser - Kafka commitId: 18a913733fb71c01
""2020-09-25 21:06:02 INFO  o.a.k.common.utils.AppInfoParser - Kafka startTimeMs: 1601048162294
""2020-09-25 21:06:02 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Subscribed to topic(s): addToCart
""2020-09-25 21:06:02 INFO  o.s.s.c.ThreadPoolTaskScheduler - Initializing ExecutorService
""2020-09-25 21:06:02 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Context refreshed
""2020-09-25 21:06:02 INFO  s.d.s.w.p.DocumentationPluginsBootstrapper - Found 1 custom documentation plugin(s)
""2020-09-25 21:06:02 INFO  s.d.s.w.s.ApiListingReferenceScanner - Scanning for api listing references
""2020-09-25 21:06:02 INFO  s.d.s.w.r.o.CachingOperationNameGenerator - Generating unique operation named: confirmOrderPaynowUsingPOST_1
""2020-09-25 21:06:02 INFO  o.apache.kafka.clients.Metadata - [Consumer clientId=consumer-1, groupId=group_id] Cluster ID: muh6ZvnKSlmtdPjqUAAreQ
""2020-09-25 21:06:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Discovered group coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 21:06:02 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Revoking previously assigned partitions []
""2020-09-25 21:06:02 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions revoked: []
""2020-09-25 21:06:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 21:06:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] (Re-)joining group
""2020-09-25 21:06:02 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Successfully joined group with generation 153
""2020-09-25 21:06:02 INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8084 (http) with context path ''
""2020-09-25 21:06:02 INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8084
""2020-09-25 21:06:02 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting newly assigned partitions: addToCart-0
""2020-09-25 21:06:02 INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Setting offset for partition addToCart-0 to the committed offset FetchPosition{offset=57, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=MT-7JZHRT2:9092 (id: 0 rack: null), epoch=0}}
""2020-09-25 21:06:02 INFO  o.s.k.l.KafkaMessageListenerContainer - group_id: partitions assigned: [addToCart-0]
""2020-09-25 21:06:02 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 21:06:02 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook installed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 21:06:02 INFO  c.n.l.BaseLoadBalancer - Client: searchservice instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
""2020-09-25 21:06:02 INFO  c.n.l.DynamicServerListLoadBalancer - Using serverListUpdater PollingServerListUpdater
""2020-09-25 21:06:02 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 21:06:02 INFO  c.n.l.DynamicServerListLoadBalancer - DynamicServerListLoadBalancer for client searchservice initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=searchservice,current list of Servers=[MT-7JZHRT2:8083],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:MT-7JZHRT2:8083;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 05:30:00 IST 1970;	First connection made: Thu Jan 01 05:30:00 IST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3a8c25d5
""2020-09-25 21:06:03 DEBUG o.s.w.c.HttpMessageConverterExtractor - Reading to [java.lang.Double]
""2020-09-25 21:06:03 INFO  c.m.o.OrderServiceApplication - Started OrderServiceApplication in 9.874 seconds (JVM running for 10.87)
""2020-09-25 21:06:03 INFO  c.n.c.ChainedDynamicProperty - Flipping property: searchservice.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
""2020-09-25 21:06:22 INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
""2020-09-25 21:06:22 INFO  o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application ORDERSERVICE with eureka with status DOWN
""2020-09-25 21:06:22 WARN  c.n.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1601048182275, current=DOWN, previous=UP]
""2020-09-25 21:06:22 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084: registering service...
""2020-09-25 21:06:22 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - registration status: 204
""2020-09-25 21:06:22 INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=group_id] Member consumer-1-2f627303-66a4-4217-b714-276eba487f8b sending LeaveGroup request to coordinator MT-7JZHRT2:9092 (id: 2147483647 rack: null)
""2020-09-25 21:06:22 INFO  o.a.k.c.consumer.KafkaConsumer - [Consumer clientId=consumer-1, groupId=group_id] Unsubscribed all topics or patterns and assigned partitions
""2020-09-25 21:06:22 INFO  o.s.s.c.ThreadPoolTaskScheduler - Shutting down ExecutorService
""2020-09-25 21:06:22 INFO  o.s.k.l.KafkaMessageListenerContainer$ListenerConsumer - group_id: Consumer stopped
""2020-09-25 21:06:22 INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
""2020-09-25 21:06:22 INFO  c.n.u.c.ShutdownEnabledTimer - Shutdown hook removed for: NFLoadBalancer-PingTimer-searchservice
""2020-09-25 21:06:22 INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
""2020-09-25 21:06:22 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
""2020-09-25 21:06:22 INFO  c.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
""2020-09-25 21:06:22 INFO  c.n.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
""2020-09-25 21:06:25 INFO  c.n.discovery.DiscoveryClient - Unregistering ...
""2020-09-25 21:06:25 INFO  c.n.discovery.DiscoveryClient - DiscoveryClient_ORDERSERVICE/MT-7JZHRT2:orderservice:8084 - deregister  status: 200
""2020-09-25 21:06:25 INFO  c.n.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
""2020-09-25 21:06:25 INFO  o.a.c.core.StandardService - Stopping service [Tomcat]
""2020-09-25 21:06:25 INFO  c.n.l.PollingServerListUpdater - Shutting down the Executor Pool for PollingServerListUpdater
"